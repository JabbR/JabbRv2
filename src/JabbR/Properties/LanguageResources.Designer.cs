// <auto-generated />
namespace JabbR
{
    using System.Globalization;
    using System.Reflection;
    using System.Resources;

    public static class LanguageResources
    {
        private static readonly ResourceManager _resourceManager
            = new ResourceManager("JabbR.LanguageResources", typeof(LanguageResources).GetTypeInfo().Assembly);

        /// <summary>
        /// This {0} account has already been linked to another user.
        /// </summary>
        public static string Account_AccountAlreadyLinked
        {
            get { return GetString("Account_AccountAlreadyLinked"); }
        }

        /// <summary>
        /// This {0} account has already been linked to another user.
        /// </summary>
        public static string FormatAccount_AccountAlreadyLinked(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Account_AccountAlreadyLinked"), p0);
        }

        /// <summary>
        /// Successfully linked {0} account.
        /// </summary>
        public static string Account_AccountLinkedSuccess
        {
            get { return GetString("Account_AccountLinkedSuccess"); }
        }

        /// <summary>
        /// Successfully linked {0} account.
        /// </summary>
        public static string FormatAccount_AccountLinkedSuccess(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Account_AccountLinkedSuccess"), p0);
        }

        /// <summary>
        /// Cancel
        /// </summary>
        public static string Account_Cancel
        {
            get { return GetString("Account_Cancel"); }
        }

        /// <summary>
        /// Cancel
        /// </summary>
        public static string FormatAccount_Cancel()
        {
            return GetString("Account_Cancel");
        }

        /// <summary>
        /// Change Password
        /// </summary>
        public static string Account_ChangePass
        {
            get { return GetString("Account_ChangePass"); }
        }

        /// <summary>
        /// Change Password
        /// </summary>
        public static string FormatAccount_ChangePass()
        {
            return GetString("Account_ChangePass");
        }

        /// <summary>
        /// Change Username
        /// </summary>
        public static string Account_ChangeUserName
        {
            get { return GetString("Account_ChangeUserName"); }
        }

        /// <summary>
        /// Change Username
        /// </summary>
        public static string FormatAccount_ChangeUserName()
        {
            return GetString("Account_ChangeUserName");
        }

        /// <summary>
        /// Country
        /// </summary>
        public static string Account_Country
        {
            get { return GetString("Account_Country"); }
        }

        /// <summary>
        /// Country
        /// </summary>
        public static string FormatAccount_Country()
        {
            return GetString("Account_Country");
        }

        /// <summary>
        /// Current Password
        /// </summary>
        public static string Account_CurrentPass
        {
            get { return GetString("Account_CurrentPass"); }
        }

        /// <summary>
        /// Current Password
        /// </summary>
        public static string FormatAccount_CurrentPass()
        {
            return GetString("Account_CurrentPass");
        }

        /// <summary>
        /// Email
        /// </summary>
        public static string Account_Email
        {
            get { return GetString("Account_Email"); }
        }

        /// <summary>
        /// Email
        /// </summary>
        public static string FormatAccount_Email()
        {
            return GetString("Account_Email");
        }

        /// <summary>
        /// Identity Providers
        /// </summary>
        public static string Account_IdentityProviders
        {
            get { return GetString("Account_IdentityProviders"); }
        }

        /// <summary>
        /// Identity Providers
        /// </summary>
        public static string FormatAccount_IdentityProviders()
        {
            return GetString("Account_IdentityProviders");
        }

        /// <summary>
        /// Identity {0} already taken with Provider {1}, please login with a different provider/identity combination.
        /// </summary>
        public static string Account_IdentityProviderTaken
        {
            get { return GetString("Account_IdentityProviderTaken"); }
        }

        /// <summary>
        /// Identity {0} already taken with Provider {1}, please login with a different provider/identity combination.
        /// </summary>
        public static string FormatAccount_IdentityProviderTaken(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Account_IdentityProviderTaken"), p0, p1);
        }

        /// <summary>
        /// Note
        /// </summary>
        public static string Account_Note
        {
            get { return GetString("Account_Note"); }
        }

        /// <summary>
        /// Note
        /// </summary>
        public static string FormatAccount_Note()
        {
            return GetString("Account_Note");
        }

        /// <summary>
        /// Password
        /// </summary>
        public static string Account_Pass
        {
            get { return GetString("Account_Pass"); }
        }

        /// <summary>
        /// Password
        /// </summary>
        public static string FormatAccount_Pass()
        {
            return GetString("Account_Pass");
        }

        /// <summary>
        /// Confirm Password
        /// </summary>
        public static string Account_PassConfirm
        {
            get { return GetString("Account_PassConfirm"); }
        }

        /// <summary>
        /// Confirm Password
        /// </summary>
        public static string FormatAccount_PassConfirm()
        {
            return GetString("Account_PassConfirm");
        }

        /// <summary>
        /// Profile
        /// </summary>
        public static string Account_Profile
        {
            get { return GetString("Account_Profile"); }
        }

        /// <summary>
        /// Profile
        /// </summary>
        public static string FormatAccount_Profile()
        {
            return GetString("Account_Profile");
        }

        /// <summary>
        /// Register
        /// </summary>
        public static string Account_Register
        {
            get { return GetString("Account_Register"); }
        }

        /// <summary>
        /// Register
        /// </summary>
        public static string FormatAccount_Register()
        {
            return GetString("Account_Register");
        }

        /// <summary>
        /// &lt;a href="{0}"&gt;Register&lt;/a&gt; if you don't have an account.
        /// </summary>
        public static string Account_RegisterMessage
        {
            get { return GetString("Account_RegisterMessage"); }
        }

        /// <summary>
        /// &lt;a href="{0}"&gt;Register&lt;/a&gt; if you don't have an account.
        /// </summary>
        public static string FormatAccount_RegisterMessage(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Account_RegisterMessage"), p0);
        }

        /// <summary>
        /// Sign in
        /// </summary>
        public static string Account_SignIn
        {
            get { return GetString("Account_SignIn"); }
        }

        /// <summary>
        /// Sign in
        /// </summary>
        public static string FormatAccount_SignIn()
        {
            return GetString("Account_SignIn");
        }

        /// <summary>
        /// Successfully unlinked {0} account.
        /// </summary>
        public static string Account_UnlinkCompleted
        {
            get { return GetString("Account_UnlinkCompleted"); }
        }

        /// <summary>
        /// Successfully unlinked {0} account.
        /// </summary>
        public static string FormatAccount_UnlinkCompleted(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Account_UnlinkCompleted"), p0);
        }

        /// <summary>
        /// Unlink identity provider
        /// </summary>
        public static string Account_UnlinkIdentityProvider
        {
            get { return GetString("Account_UnlinkIdentityProvider"); }
        }

        /// <summary>
        /// Unlink identity provider
        /// </summary>
        public static string FormatAccount_UnlinkIdentityProvider()
        {
            return GetString("Account_UnlinkIdentityProvider");
        }

        /// <summary>
        /// You cannot unlink this account because you would lose your ability to login.
        /// </summary>
        public static string Account_UnlinkRequiresMultipleIdentities
        {
            get { return GetString("Account_UnlinkRequiresMultipleIdentities"); }
        }

        /// <summary>
        /// You cannot unlink this account because you would lose your ability to login.
        /// </summary>
        public static string FormatAccount_UnlinkRequiresMultipleIdentities()
        {
            return GetString("Account_UnlinkRequiresMultipleIdentities");
        }

        /// <summary>
        /// Username
        /// </summary>
        public static string Account_UserName
        {
            get { return GetString("Account_UserName"); }
        }

        /// <summary>
        /// Username
        /// </summary>
        public static string FormatAccount_UserName()
        {
            return GetString("Account_UserName");
        }

        /// <summary>
        /// Confirm Username
        /// </summary>
        public static string Account_UserNameConfirm
        {
            get { return GetString("Account_UserNameConfirm"); }
        }

        /// <summary>
        /// Confirm Username
        /// </summary>
        public static string FormatAccount_UserNameConfirm()
        {
            return GetString("Account_UserNameConfirm");
        }

        /// <summary>
        /// Who do you want to make an admin?
        /// </summary>
        public static string AddAdmin_UserRequired
        {
            get { return GetString("AddAdmin_UserRequired"); }
        }

        /// <summary>
        /// Who do you want to make an admin?
        /// </summary>
        public static string FormatAddAdmin_UserRequired()
        {
            return GetString("AddAdmin_UserRequired");
        }

        /// <summary>
        /// Which room do you want to add ownership to?
        /// </summary>
        public static string AddOwner_RoomRequired
        {
            get { return GetString("AddOwner_RoomRequired"); }
        }

        /// <summary>
        /// Which room do you want to add ownership to?
        /// </summary>
        public static string FormatAddOwner_RoomRequired()
        {
            return GetString("AddOwner_RoomRequired");
        }

        /// <summary>
        /// Who do you want to make an owner?
        /// </summary>
        public static string AddOwner_UserRequired
        {
            get { return GetString("AddOwner_UserRequired"); }
        }

        /// <summary>
        /// Who do you want to make an owner?
        /// </summary>
        public static string FormatAddOwner_UserRequired()
        {
            return GetString("AddOwner_UserRequired");
        }

        /// <summary>
        /// Administration
        /// </summary>
        public static string Administration
        {
            get { return GetString("Administration"); }
        }

        /// <summary>
        /// Administration
        /// </summary>
        public static string FormatAdministration()
        {
            return GetString("Administration");
        }

        /// <summary>
        /// Allow Room Creation
        /// </summary>
        public static string Administration_AllowRoomCreation
        {
            get { return GetString("Administration_AllowRoomCreation"); }
        }

        /// <summary>
        /// Allow Room Creation
        /// </summary>
        public static string FormatAdministration_AllowRoomCreation()
        {
            return GetString("Administration_AllowRoomCreation");
        }

        /// <summary>
        /// Allow User Registration
        /// </summary>
        public static string Administration_AllowUserRegistration
        {
            get { return GetString("Administration_AllowUserRegistration"); }
        }

        /// <summary>
        /// Allow User Registration
        /// </summary>
        public static string FormatAdministration_AllowUserRegistration()
        {
            return GetString("Administration_AllowUserRegistration");
        }

        /// <summary>
        /// Analytics
        /// </summary>
        public static string Administration_Analytics
        {
            get { return GetString("Administration_Analytics"); }
        }

        /// <summary>
        /// Analytics
        /// </summary>
        public static string FormatAdministration_Analytics()
        {
            return GetString("Administration_Analytics");
        }

        /// <summary>
        /// Google Analytics ID
        /// </summary>
        public static string Administration_AnalyticsGoogleId
        {
            get { return GetString("Administration_AnalyticsGoogleId"); }
        }

        /// <summary>
        /// Google Analytics ID
        /// </summary>
        public static string FormatAdministration_AnalyticsGoogleId()
        {
            return GetString("Administration_AnalyticsGoogleId");
        }

        /// <summary>
        /// Windows Azure
        /// </summary>
        public static string Administration_Storage_Azure
        {
            get { return GetString("Administration_Storage_Azure"); }
        }

        /// <summary>
        /// Windows Azure
        /// </summary>
        public static string FormatAdministration_Storage_Azure()
        {
            return GetString("Administration_Storage_Azure");
        }

        /// <summary>
        /// Local Storage
        /// </summary>
        public static string Administration_Storage_Local
        {
            get { return GetString("Administration_Storage_Local"); }
        }

        /// <summary>
        /// Local Storage
        /// </summary>
        public static string FormatAdministration_Storage_Local()
        {
            return GetString("Administration_Storage_Local");
        }

        /// <summary>
        /// Content Providers
        /// </summary>
        public static string Administration_ContentProviders_BuiltIn
        {
            get { return GetString("Administration_ContentProviders_BuiltIn"); }
        }

        /// <summary>
        /// Content Providers
        /// </summary>
        public static string FormatAdministration_ContentProviders_BuiltIn()
        {
            return GetString("Administration_ContentProviders_BuiltIn");
        }

        /// <summary>
        /// Custom Content Providers
        /// </summary>
        public static string Administration_ContentProviders_Custom
        {
            get { return GetString("Administration_ContentProviders_Custom"); }
        }

        /// <summary>
        /// Custom Content Providers
        /// </summary>
        public static string FormatAdministration_ContentProviders_Custom()
        {
            return GetString("Administration_ContentProviders_Custom");
        }

        /// <summary>
        /// Remove
        /// </summary>
        public static string Administration_ContentProviders_Remove
        {
            get { return GetString("Administration_ContentProviders_Remove"); }
        }

        /// <summary>
        /// Remove
        /// </summary>
        public static string FormatAdministration_ContentProviders_Remove()
        {
            return GetString("Administration_ContentProviders_Remove");
        }

        /// <summary>
        /// Enabled
        /// </summary>
        public static string Administration_ContentProviders_Enabled
        {
            get { return GetString("Administration_ContentProviders_Enabled"); }
        }

        /// <summary>
        /// Enabled
        /// </summary>
        public static string FormatAdministration_ContentProviders_Enabled()
        {
            return GetString("Administration_ContentProviders_Enabled");
        }

        /// <summary>
        /// Collapsible
        /// </summary>
        public static string Administration_ContentProviders_Collapsible
        {
            get { return GetString("Administration_ContentProviders_Collapsible"); }
        }

        /// <summary>
        /// Collapsible
        /// </summary>
        public static string FormatAdministration_ContentProviders_Collapsible()
        {
            return GetString("Administration_ContentProviders_Collapsible");
        }

        /// <summary>
        /// Name
        /// </summary>
        public static string Administration_ContentProviders_Name
        {
            get { return GetString("Administration_ContentProviders_Name"); }
        }

        /// <summary>
        /// Name
        /// </summary>
        public static string FormatAdministration_ContentProviders_Name()
        {
            return GetString("Administration_ContentProviders_Name");
        }

        /// <summary>
        /// Domains
        /// </summary>
        public static string Administration_ContentProviders_Domains
        {
            get { return GetString("Administration_ContentProviders_Domains"); }
        }

        /// <summary>
        /// Domains
        /// </summary>
        public static string FormatAdministration_ContentProviders_Domains()
        {
            return GetString("Administration_ContentProviders_Domains");
        }

        /// <summary>
        /// Extract (Regex)
        /// </summary>
        public static string Administration_ContentProviders_Extract
        {
            get { return GetString("Administration_ContentProviders_Extract"); }
        }

        /// <summary>
        /// Extract (Regex)
        /// </summary>
        public static string FormatAdministration_ContentProviders_Extract()
        {
            return GetString("Administration_ContentProviders_Extract");
        }

        /// <summary>
        /// Output (HTML)
        /// </summary>
        public static string Administration_ContentProviders_Output
        {
            get { return GetString("Administration_ContentProviders_Output"); }
        }

        /// <summary>
        /// Output (HTML)
        /// </summary>
        public static string FormatAdministration_ContentProviders_Output()
        {
            return GetString("Administration_ContentProviders_Output");
        }

        /// <summary>
        /// Script
        /// </summary>
        public static string Administration_ContentProviders_Script
        {
            get { return GetString("Administration_ContentProviders_Script"); }
        }

        /// <summary>
        /// Script
        /// </summary>
        public static string FormatAdministration_ContentProviders_Script()
        {
            return GetString("Administration_ContentProviders_Script");
        }

        /// <summary>
        /// Title
        /// </summary>
        public static string Administration_ContentProviders_Title
        {
            get { return GetString("Administration_ContentProviders_Title"); }
        }

        /// <summary>
        /// Title
        /// </summary>
        public static string FormatAdministration_ContentProviders_Title()
        {
            return GetString("Administration_ContentProviders_Title");
        }

        /// <summary>
        /// Azure Blob Storage Connectionstring
        /// </summary>
        public static string Administration_AzureBlobStorageConnectionString
        {
            get { return GetString("Administration_AzureBlobStorageConnectionString"); }
        }

        /// <summary>
        /// Azure Blob Storage Connectionstring
        /// </summary>
        public static string FormatAdministration_AzureBlobStorageConnectionString()
        {
            return GetString("Administration_AzureBlobStorageConnectionString");
        }

        /// <summary>
        /// Local File System Storage Path
        /// </summary>
        public static string Administration_LocalFileSystemStoragePath
        {
            get { return GetString("Administration_LocalFileSystemStoragePath"); }
        }

        /// <summary>
        /// Local File System Storage Path
        /// </summary>
        public static string FormatAdministration_LocalFileSystemStoragePath()
        {
            return GetString("Administration_LocalFileSystemStoragePath");
        }

        /// <summary>
        /// D:\path\to\my\files\
        /// </summary>
        public static string Administration_LocalFileSystemStoragePath_PlaceHolder
        {
            get { return GetString("Administration_LocalFileSystemStoragePath_PlaceHolder"); }
        }

        /// <summary>
        /// D:\path\to\my\files\
        /// </summary>
        public static string FormatAdministration_LocalFileSystemStoragePath_PlaceHolder()
        {
            return GetString("Administration_LocalFileSystemStoragePath_PlaceHolder");
        }

        /// <summary>
        /// Local File System Storage Uri Prefix
        /// </summary>
        public static string Administration_LocalFileSystemStorageUriPrefix
        {
            get { return GetString("Administration_LocalFileSystemStorageUriPrefix"); }
        }

        /// <summary>
        /// Local File System Storage Uri Prefix
        /// </summary>
        public static string FormatAdministration_LocalFileSystemStorageUriPrefix()
        {
            return GetString("Administration_LocalFileSystemStorageUriPrefix");
        }

        /// <summary>
        /// http://static.jabbr.net/files/
        /// </summary>
        public static string Administration_LocalFileSystemStorageUriPrefix_PlaceHolder
        {
            get { return GetString("Administration_LocalFileSystemStorageUriPrefix_PlaceHolder"); }
        }

        /// <summary>
        /// http://static.jabbr.net/files/
        /// </summary>
        public static string FormatAdministration_LocalFileSystemStorageUriPrefix_PlaceHolder()
        {
            return GetString("Administration_LocalFileSystemStorageUriPrefix_PlaceHolder");
        }

        /// <summary>
        /// Encryption
        /// </summary>
        public static string Administration_Encryption
        {
            get { return GetString("Administration_Encryption"); }
        }

        /// <summary>
        /// Encryption
        /// </summary>
        public static string FormatAdministration_Encryption()
        {
            return GetString("Administration_Encryption");
        }

        /// <summary>
        /// Encryption Key
        /// </summary>
        public static string Administration_EncryptionKey
        {
            get { return GetString("Administration_EncryptionKey"); }
        }

        /// <summary>
        /// Encryption Key
        /// </summary>
        public static string FormatAdministration_EncryptionKey()
        {
            return GetString("Administration_EncryptionKey");
        }

        /// <summary>
        /// General Settings
        /// </summary>
        public static string Administration_GeneralSettings
        {
            get { return GetString("Administration_GeneralSettings"); }
        }

        /// <summary>
        /// General Settings
        /// </summary>
        public static string FormatAdministration_GeneralSettings()
        {
            return GetString("Administration_GeneralSettings");
        }

        /// <summary>
        /// Identity Providers
        /// </summary>
        public static string Administration_IdentityProviders
        {
            get { return GetString("Administration_IdentityProviders"); }
        }

        /// <summary>
        /// Identity Providers
        /// </summary>
        public static string FormatAdministration_IdentityProviders()
        {
            return GetString("Administration_IdentityProviders");
        }

        /// <summary>
        /// Max File Upload Size (Bytes)
        /// </summary>
        public static string Administration_MaxFileUploadBytes
        {
            get { return GetString("Administration_MaxFileUploadBytes"); }
        }

        /// <summary>
        /// Max File Upload Size (Bytes)
        /// </summary>
        public static string FormatAdministration_MaxFileUploadBytes()
        {
            return GetString("Administration_MaxFileUploadBytes");
        }

        /// <summary>
        /// Storage
        /// </summary>
        public static string Administration_Storage
        {
            get { return GetString("Administration_Storage"); }
        }

        /// <summary>
        /// Storage
        /// </summary>
        public static string FormatAdministration_Storage()
        {
            return GetString("Administration_Storage");
        }

        /// <summary>
        /// Verification Key
        /// </summary>
        public static string Administration_VerificationKey
        {
            get { return GetString("Administration_VerificationKey"); }
        }

        /// <summary>
        /// Verification Key
        /// </summary>
        public static string FormatAdministration_VerificationKey()
        {
            return GetString("Administration_VerificationKey");
        }

        /// <summary>
        /// You are not an admin.
        /// </summary>
        public static string AdminRequired
        {
            get { return GetString("AdminRequired"); }
        }

        /// <summary>
        /// You are not an admin.
        /// </summary>
        public static string FormatAdminRequired()
        {
            return GetString("AdminRequired");
        }

        /// <summary>
        /// Which room do you want to list the allowed users of?
        /// </summary>
        public static string Allowed_RoomRequired
        {
            get { return GetString("Allowed_RoomRequired"); }
        }

        /// <summary>
        /// Which room do you want to list the allowed users of?
        /// </summary>
        public static string FormatAllowed_RoomRequired()
        {
            return GetString("Allowed_RoomRequired");
        }

        /// <summary>
        /// Which room do you want to allow access to?
        /// </summary>
        public static string Allow_RoomRequired
        {
            get { return GetString("Allow_RoomRequired"); }
        }

        /// <summary>
        /// Which room do you want to allow access to?
        /// </summary>
        public static string FormatAllow_RoomRequired()
        {
            return GetString("Allow_RoomRequired");
        }

        /// <summary>
        /// Who do you want to grant access permissions to?
        /// </summary>
        public static string Allow_UserRequired
        {
            get { return GetString("Allow_UserRequired"); }
        }

        /// <summary>
        /// Who do you want to grant access permissions to?
        /// </summary>
        public static string FormatAllow_UserRequired()
        {
            return GetString("Allow_UserRequired");
        }

        /// <summary>
        /// Your browser does not support the audio tag.
        /// </summary>
        public static string AudioTagSupportRequired
        {
            get { return GetString("AudioTagSupportRequired"); }
        }

        /// <summary>
        /// Your browser does not support the audio tag.
        /// </summary>
        public static string FormatAudioTagSupportRequired()
        {
            return GetString("AudioTagSupportRequired");
        }

        /// <summary>
        /// A password is required.
        /// </summary>
        public static string AuthenticationPasswordRequired
        {
            get { return GetString("AuthenticationPasswordRequired"); }
        }

        /// <summary>
        /// A password is required.
        /// </summary>
        public static string FormatAuthenticationPasswordRequired()
        {
            return GetString("AuthenticationPasswordRequired");
        }

        /// <summary>
        /// Email is required.
        /// </summary>
        public static string Authentication_EmailRequired
        {
            get { return GetString("Authentication_EmailRequired"); }
        }

        /// <summary>
        /// Email is required.
        /// </summary>
        public static string FormatAuthentication_EmailRequired()
        {
            return GetString("Authentication_EmailRequired");
        }

        /// <summary>
        /// Login failed. Check your username/password.
        /// </summary>
        public static string Authentication_GenericFailure
        {
            get { return GetString("Authentication_GenericFailure"); }
        }

        /// <summary>
        /// Login failed. Check your username/password.
        /// </summary>
        public static string FormatAuthentication_GenericFailure()
        {
            return GetString("Authentication_GenericFailure");
        }

        /// <summary>
        /// Successfully changed your username.
        /// </summary>
        public static string Authentication_NameChangeCompleted
        {
            get { return GetString("Authentication_NameChangeCompleted"); }
        }

        /// <summary>
        /// Successfully changed your username.
        /// </summary>
        public static string FormatAuthentication_NameChangeCompleted()
        {
            return GetString("Authentication_NameChangeCompleted");
        }

        /// <summary>
        /// Usernames don't match.
        /// </summary>
        public static string Authentication_NameNonMatching
        {
            get { return GetString("Authentication_NameNonMatching"); }
        }

        /// <summary>
        /// Usernames don't match.
        /// </summary>
        public static string FormatAuthentication_NameNonMatching()
        {
            return GetString("Authentication_NameNonMatching");
        }

        /// <summary>
        /// Username is required.
        /// </summary>
        public static string Authentication_NameRequired
        {
            get { return GetString("Authentication_NameRequired"); }
        }

        /// <summary>
        /// Username is required.
        /// </summary>
        public static string FormatAuthentication_NameRequired()
        {
            return GetString("Authentication_NameRequired");
        }

        /// <summary>
        /// You're not logged in.
        /// </summary>
        public static string Authentication_NotLoggedIn
        {
            get { return GetString("Authentication_NotLoggedIn"); }
        }

        /// <summary>
        /// You're not logged in.
        /// </summary>
        public static string FormatAuthentication_NotLoggedIn()
        {
            return GetString("Authentication_NotLoggedIn");
        }

        /// <summary>
        /// That's already your username...
        /// </summary>
        public static string Authentication_OldNewUsernamesSame
        {
            get { return GetString("Authentication_OldNewUsernamesSame"); }
        }

        /// <summary>
        /// That's already your username...
        /// </summary>
        public static string FormatAuthentication_OldNewUsernamesSame()
        {
            return GetString("Authentication_OldNewUsernamesSame");
        }

        /// <summary>
        /// Old password is required.
        /// </summary>
        public static string Authentication_OldPasswordRequired
        {
            get { return GetString("Authentication_OldPasswordRequired"); }
        }

        /// <summary>
        /// Old password is required.
        /// </summary>
        public static string FormatAuthentication_OldPasswordRequired()
        {
            return GetString("Authentication_OldPasswordRequired");
        }

        /// <summary>
        /// Successfully added a password.
        /// </summary>
        public static string Authentication_PassAddSuccess
        {
            get { return GetString("Authentication_PassAddSuccess"); }
        }

        /// <summary>
        /// Successfully added a password.
        /// </summary>
        public static string FormatAuthentication_PassAddSuccess()
        {
            return GetString("Authentication_PassAddSuccess");
        }

        /// <summary>
        /// Successfully changed your password.
        /// </summary>
        public static string Authentication_PassChangeSuccess
        {
            get { return GetString("Authentication_PassChangeSuccess"); }
        }

        /// <summary>
        /// Successfully changed your password.
        /// </summary>
        public static string FormatAuthentication_PassChangeSuccess()
        {
            return GetString("Authentication_PassChangeSuccess");
        }

        /// <summary>
        /// Your password must be at least {0} characters.
        /// </summary>
        public static string Authentication_PassLengthRequired
        {
            get { return GetString("Authentication_PassLengthRequired"); }
        }

        /// <summary>
        /// Your password must be at least {0} characters.
        /// </summary>
        public static string FormatAuthentication_PassLengthRequired(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Authentication_PassLengthRequired"), p0);
        }

        /// <summary>
        /// Passwords don't match.
        /// </summary>
        public static string Authentication_PassNonMatching
        {
            get { return GetString("Authentication_PassNonMatching"); }
        }

        /// <summary>
        /// Passwords don't match.
        /// </summary>
        public static string FormatAuthentication_PassNonMatching()
        {
            return GetString("Authentication_PassNonMatching");
        }

        /// <summary>
        /// Password is required.
        /// </summary>
        public static string Authentication_PassRequired
        {
            get { return GetString("Authentication_PassRequired"); }
        }

        /// <summary>
        /// Password is required.
        /// </summary>
        public static string FormatAuthentication_PassRequired()
        {
            return GetString("Authentication_PassRequired");
        }

        /// <summary>
        /// You cannot ban another admin.
        /// </summary>
        public static string Ban_CannotBanAdmin
        {
            get { return GetString("Ban_CannotBanAdmin"); }
        }

        /// <summary>
        /// You cannot ban another admin.
        /// </summary>
        public static string FormatBan_CannotBanAdmin()
        {
            return GetString("Ban_CannotBanAdmin");
        }

        /// <summary>
        /// Who do you want to ban?
        /// </summary>
        public static string Ban_UserRequired
        {
            get { return GetString("Ban_UserRequired"); }
        }

        /// <summary>
        /// Who do you want to ban?
        /// </summary>
        public static string FormatBan_UserRequired()
        {
            return GetString("Ban_UserRequired");
        }

        /// <summary>
        /// What message do you want to broadcast?
        /// </summary>
        public static string Broadcast_MessageRequired
        {
            get { return GetString("Broadcast_MessageRequired"); }
        }

        /// <summary>
        /// What message do you want to broadcast?
        /// </summary>
        public static string FormatBroadcast_MessageRequired()
        {
            return GetString("Broadcast_MessageRequired");
        }

        /// <summary>
        /// Account Settings
        /// </summary>
        public static string Client_AccountSettings
        {
            get { return GetString("Client_AccountSettings"); }
        }

        /// <summary>
        /// Account Settings
        /// </summary>
        public static string FormatClient_AccountSettings()
        {
            return GetString("Client_AccountSettings");
        }

        /// <summary>
        /// admin
        /// </summary>
        public static string Client_AdminTag
        {
            get { return GetString("Client_AdminTag"); }
        }

        /// <summary>
        /// admin
        /// </summary>
        public static string FormatClient_AdminTag()
        {
            return GetString("Client_AdminTag");
        }

        /// <summary>
        /// Audible Notifications
        /// </summary>
        public static string Client_AudibleNotifications
        {
            get { return GetString("Client_AudibleNotifications"); }
        }

        /// <summary>
        /// Audible Notifications
        /// </summary>
        public static string FormatClient_AudibleNotifications()
        {
            return GetString("Client_AudibleNotifications");
        }

        /// <summary>
        /// All
        /// </summary>
        public static string Client_DateRangeAll
        {
            get { return GetString("Client_DateRangeAll"); }
        }

        /// <summary>
        /// All
        /// </summary>
        public static string FormatClient_DateRangeAll()
        {
            return GetString("Client_DateRangeAll");
        }

        /// <summary>
        /// Last day
        /// </summary>
        public static string Client_DateRangeLastDay
        {
            get { return GetString("Client_DateRangeLastDay"); }
        }

        /// <summary>
        /// Last day
        /// </summary>
        public static string FormatClient_DateRangeLastDay()
        {
            return GetString("Client_DateRangeLastDay");
        }

        /// <summary>
        /// Last hour
        /// </summary>
        public static string Client_DateRangeLastHour
        {
            get { return GetString("Client_DateRangeLastHour"); }
        }

        /// <summary>
        /// Last hour
        /// </summary>
        public static string FormatClient_DateRangeLastHour()
        {
            return GetString("Client_DateRangeLastHour");
        }

        /// <summary>
        /// Last month
        /// </summary>
        public static string Client_DateRangeLastMonth
        {
            get { return GetString("Client_DateRangeLastMonth"); }
        }

        /// <summary>
        /// Last month
        /// </summary>
        public static string FormatClient_DateRangeLastMonth()
        {
            return GetString("Client_DateRangeLastMonth");
        }

        /// <summary>
        /// Last week
        /// </summary>
        public static string Client_DateRangeLastWeek
        {
            get { return GetString("Client_DateRangeLastWeek"); }
        }

        /// <summary>
        /// Last week
        /// </summary>
        public static string FormatClient_DateRangeLastWeek()
        {
            return GetString("Client_DateRangeLastWeek");
        }

        /// <summary>
        /// Deployed from &lt;a target="_blank" href="https://github.com/JabbR/JabbR/commit/{0}" title="View the commit"&gt;{1}&lt;/a&gt; on &lt;a target="_blank" href="https://github.com/JabbR/JabbR/branches/{2}" title="View the branch"&gt;{2}&lt;/a&gt; at {3}.
        /// </summary>
        public static string Client_DeploymentInfo
        {
            get { return GetString("Client_DeploymentInfo"); }
        }

        /// <summary>
        /// Deployed from &lt;a target="_blank" href="https://github.com/JabbR/JabbR/commit/{0}" title="View the commit"&gt;{1}&lt;/a&gt; on &lt;a target="_blank" href="https://github.com/JabbR/JabbR/branches/{2}" title="View the branch"&gt;{2}&lt;/a&gt; at {3}.
        /// </summary>
        public static string FormatClient_DeploymentInfo(object p0, object p1, object p2, object p3)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Client_DeploymentInfo"), p0, p1, p2, p3);
        }

        /// <summary>
        /// Display Help
        /// </summary>
        public static string Client_DisplayHelp
        {
            get { return GetString("Client_DisplayHelp"); }
        }

        /// <summary>
        /// Display Help
        /// </summary>
        public static string FormatClient_DisplayHelp()
        {
            return GetString("Client_DisplayHelp");
        }

        /// <summary>
        /// Download
        /// </summary>
        public static string Client_Download
        {
            get { return GetString("Client_Download"); }
        }

        /// <summary>
        /// Download
        /// </summary>
        public static string FormatClient_Download()
        {
            return GetString("Client_Download");
        }

        /// <summary>
        /// Download Messages
        /// </summary>
        public static string Client_DownloadMessages
        {
            get { return GetString("Client_DownloadMessages"); }
        }

        /// <summary>
        /// Download Messages
        /// </summary>
        public static string FormatClient_DownloadMessages()
        {
            return GetString("Client_DownloadMessages");
        }

        /// <summary>
        /// Select date range for messages:
        /// </summary>
        public static string Client_DownloadMessagesDateRange
        {
            get { return GetString("Client_DownloadMessagesDateRange"); }
        }

        /// <summary>
        /// Select date range for messages:
        /// </summary>
        public static string FormatClient_DownloadMessagesDateRange()
        {
            return GetString("Client_DownloadMessagesDateRange");
        }

        /// <summary>
        /// FAQ
        /// </summary>
        public static string Client_FAQ
        {
            get { return GetString("Client_FAQ"); }
        }

        /// <summary>
        /// FAQ
        /// </summary>
        public static string FormatClient_FAQ()
        {
            return GetString("Client_FAQ");
        }

        /// <summary>
        /// &lt;p&gt;Click on a user to send message.&lt;/p&gt;
        /// &lt;p&gt;Type #roomname to create a link to a room.&lt;/p&gt;
        /// &lt;p&gt;Use #test for testing.&lt;/p&gt;
        /// &lt;p&gt;To use a command, enter it into the chat message textbox.&lt;/p&gt;
        /// </summary>
        public static string Client_FAQMessage
        {
            get { return GetString("Client_FAQMessage"); }
        }

        /// <summary>
        /// &lt;p&gt;Click on a user to send message.&lt;/p&gt;
        /// &lt;p&gt;Type #roomname to create a link to a room.&lt;/p&gt;
        /// &lt;p&gt;Use #test for testing.&lt;/p&gt;
        /// &lt;p&gt;To use a command, enter it into the chat message textbox.&lt;/p&gt;
        /// </summary>
        public static string FormatClient_FAQMessage()
        {
            return GetString("Client_FAQMessage");
        }

        /// <summary>
        /// JabbR Help
        /// </summary>
        public static string Client_Help
        {
            get { return GetString("Client_Help"); }
        }

        /// <summary>
        /// JabbR Help
        /// </summary>
        public static string FormatClient_Help()
        {
            return GetString("Client_Help");
        }

        /// <summary>
        /// Jabbr Error
        /// </summary>
        public static string Client_JabbrError
        {
            get { return GetString("Client_JabbrError"); }
        }

        /// <summary>
        /// Jabbr Error
        /// </summary>
        public static string FormatClient_JabbrError()
        {
            return GetString("Client_JabbrError");
        }

        /// <summary>
        /// There was an error contacting the server, please refresh in a few minutes.
        /// </summary>
        public static string Client_JabbrErrorMessage
        {
            get { return GetString("Client_JabbrErrorMessage"); }
        }

        /// <summary>
        /// There was an error contacting the server, please refresh in a few minutes.
        /// </summary>
        public static string FormatClient_JabbrErrorMessage()
        {
            return GetString("Client_JabbrErrorMessage");
        }

        /// <summary>
        /// JabbR Settings
        /// </summary>
        public static string Client_JabbrSettings
        {
            get { return GetString("Client_JabbrSettings"); }
        }

        /// <summary>
        /// JabbR Settings
        /// </summary>
        public static string FormatClient_JabbrSettings()
        {
            return GetString("Client_JabbrSettings");
        }

        /// <summary>
        /// Loading previous messages...
        /// </summary>
        public static string Client_LoadingPreviousMessages
        {
            get { return GetString("Client_LoadingPreviousMessages"); }
        }

        /// <summary>
        /// Loading previous messages...
        /// </summary>
        public static string FormatClient_LoadingPreviousMessages()
        {
            return GetString("Client_LoadingPreviousMessages");
        }

        /// <summary>
        /// Load missing messages
        /// </summary>
        public static string Client_LoadMissingMessages
        {
            get { return GetString("Client_LoadMissingMessages"); }
        }

        /// <summary>
        /// Load missing messages
        /// </summary>
        public static string FormatClient_LoadMissingMessages()
        {
            return GetString("Client_LoadMissingMessages");
        }

        /// <summary>
        /// Load more...
        /// </summary>
        public static string Client_LoadMore
        {
            get { return GetString("Client_LoadMore"); }
        }

        /// <summary>
        /// Load more...
        /// </summary>
        public static string FormatClient_LoadMore()
        {
            return GetString("Client_LoadMore");
        }

        /// <summary>
        /// Lobby
        /// </summary>
        public static string Client_Lobby
        {
            get { return GetString("Client_Lobby"); }
        }

        /// <summary>
        /// Lobby
        /// </summary>
        public static string FormatClient_Lobby()
        {
            return GetString("Client_Lobby");
        }

        /// <summary>
        /// No matching rooms
        /// </summary>
        public static string Client_NoMatchingRooms
        {
            get { return GetString("Client_NoMatchingRooms"); }
        }

        /// <summary>
        /// No matching rooms
        /// </summary>
        public static string FormatClient_NoMatchingRooms()
        {
            return GetString("Client_NoMatchingRooms");
        }

        /// <summary>
        /// Notifications
        /// </summary>
        public static string Client_Notifications
        {
            get { return GetString("Client_Notifications"); }
        }

        /// <summary>
        /// Notifications
        /// </summary>
        public static string FormatClient_Notifications()
        {
            return GetString("Client_Notifications");
        }

        /// <summary>
        /// No users
        /// </summary>
        public static string Client_NoUsersInList
        {
            get { return GetString("Client_NoUsersInList"); }
        }

        /// <summary>
        /// No users
        /// </summary>
        public static string FormatClient_NoUsersInList()
        {
            return GetString("Client_NoUsersInList");
        }

        /// <summary>
        /// {0} occupants
        /// </summary>
        public static string Client_OccupantsMany
        {
            get { return GetString("Client_OccupantsMany"); }
        }

        /// <summary>
        /// {0} occupants
        /// </summary>
        public static string FormatClient_OccupantsMany(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Client_OccupantsMany"), p0);
        }

        /// <summary>
        /// 1 occupant
        /// </summary>
        public static string Client_OccupantsOne
        {
            get { return GetString("Client_OccupantsOne"); }
        }

        /// <summary>
        /// 1 occupant
        /// </summary>
        public static string FormatClient_OccupantsOne()
        {
            return GetString("Client_OccupantsOne");
        }

        /// <summary>
        /// Unoccupied
        /// </summary>
        public static string Client_OccupantsZero
        {
            get { return GetString("Client_OccupantsZero"); }
        }

        /// <summary>
        /// Unoccupied
        /// </summary>
        public static string FormatClient_OccupantsZero()
        {
            return GetString("Client_OccupantsZero");
        }

        /// <summary>
        /// Popup Notifications
        /// </summary>
        public static string Client_PopupNotifications
        {
            get { return GetString("Client_PopupNotifications"); }
        }

        /// <summary>
        /// Popup Notifications
        /// </summary>
        public static string FormatClient_PopupNotifications()
        {
            return GetString("Client_PopupNotifications");
        }

        /// <summary>
        /// JabbR Update
        /// </summary>
        public static string Client_RefreshRequiredHeader
        {
            get { return GetString("Client_RefreshRequiredHeader"); }
        }

        /// <summary>
        /// JabbR Update
        /// </summary>
        public static string FormatClient_RefreshRequiredHeader()
        {
            return GetString("Client_RefreshRequiredHeader");
        }

        /// <summary>
        /// Refresh your browser to get the latest version.  Auto update will take place in 15 seconds.
        /// </summary>
        public static string Client_RefreshRequiredNotification
        {
            get { return GetString("Client_RefreshRequiredNotification"); }
        }

        /// <summary>
        /// Refresh your browser to get the latest version.  Auto update will take place in 15 seconds.
        /// </summary>
        public static string FormatClient_RefreshRequiredNotification()
        {
            return GetString("Client_RefreshRequiredNotification");
        }

        /// <summary>
        /// Room commands
        /// </summary>
        public static string Client_RoomCommands
        {
            get { return GetString("Client_RoomCommands"); }
        }

        /// <summary>
        /// Room commands
        /// </summary>
        public static string FormatClient_RoomCommands()
        {
            return GetString("Client_RoomCommands");
        }

        /// <summary>
        /// Start typing to filter room list...
        /// </summary>
        public static string Client_RoomFilterInstruction
        {
            get { return GetString("Client_RoomFilterInstruction"); }
        }

        /// <summary>
        /// Start typing to filter room list...
        /// </summary>
        public static string FormatClient_RoomFilterInstruction()
        {
            return GetString("Client_RoomFilterInstruction");
        }

        /// <summary>
        /// Rooms
        /// </summary>
        public static string Client_Rooms
        {
            get { return GetString("Client_Rooms"); }
        }

        /// <summary>
        /// Rooms
        /// </summary>
        public static string FormatClient_Rooms()
        {
            return GetString("Client_Rooms");
        }

        /// <summary>
        /// Room Settings
        /// </summary>
        public static string Client_RoomSettings
        {
            get { return GetString("Client_RoomSettings"); }
        }

        /// <summary>
        /// Room Settings
        /// </summary>
        public static string FormatClient_RoomSettings()
        {
            return GetString("Client_RoomSettings");
        }

        /// <summary>
        /// Send
        /// </summary>
        public static string Client_Send
        {
            get { return GetString("Client_Send"); }
        }

        /// <summary>
        /// Send
        /// </summary>
        public static string FormatClient_Send()
        {
            return GetString("Client_Send");
        }

        /// <summary>
        /// Show Closed Rooms?
        /// </summary>
        public static string Client_ShowClosedRooms
        {
            get { return GetString("Client_ShowClosedRooms"); }
        }

        /// <summary>
        /// Show Closed Rooms?
        /// </summary>
        public static string FormatClient_ShowClosedRooms()
        {
            return GetString("Client_ShowClosedRooms");
        }

        /// <summary>
        /// Sign Out
        /// </summary>
        public static string Client_SignOut
        {
            get { return GetString("Client_SignOut"); }
        }

        /// <summary>
        /// Sign Out
        /// </summary>
        public static string FormatClient_SignOut()
        {
            return GetString("Client_SignOut");
        }

        /// <summary>
        /// Site-wide commands
        /// </summary>
        public static string Client_SiteWideCommands
        {
            get { return GetString("Client_SiteWideCommands"); }
        }

        /// <summary>
        /// Site-wide commands
        /// </summary>
        public static string FormatClient_SiteWideCommands()
        {
            return GetString("Client_SiteWideCommands");
        }

        /// <summary>
        /// Site-wide shortcuts
        /// </summary>
        public static string Client_SiteWideShortcuts
        {
            get { return GetString("Client_SiteWideShortcuts"); }
        }

        /// <summary>
        /// Site-wide shortcuts
        /// </summary>
        public static string FormatClient_SiteWideShortcuts()
        {
            return GetString("Client_SiteWideShortcuts");
        }

        /// <summary>
        /// Toggle Rich Content
        /// </summary>
        public static string Client_ToggleRichContent
        {
            get { return GetString("Client_ToggleRichContent"); }
        }

        /// <summary>
        /// Toggle Rich Content
        /// </summary>
        public static string FormatClient_ToggleRichContent()
        {
            return GetString("Client_ToggleRichContent");
        }

        /// <summary>
        /// Upload
        /// </summary>
        public static string Client_Upload
        {
            get { return GetString("Client_Upload"); }
        }

        /// <summary>
        /// Upload
        /// </summary>
        public static string FormatClient_Upload()
        {
            return GetString("Client_Upload");
        }

        /// <summary>
        /// Uploading from clipboard
        /// </summary>
        public static string Client_UploadingFromClipboard
        {
            get { return GetString("Client_UploadingFromClipboard"); }
        }

        /// <summary>
        /// Uploading from clipboard
        /// </summary>
        public static string FormatClient_UploadingFromClipboard()
        {
            return GetString("Client_UploadingFromClipboard");
        }

        /// <summary>
        /// User commands
        /// </summary>
        public static string Client_UserCommands
        {
            get { return GetString("Client_UserCommands"); }
        }

        /// <summary>
        /// User commands
        /// </summary>
        public static string FormatClient_UserCommands()
        {
            return GetString("Client_UserCommands");
        }

        /// <summary>
        /// Your Private Rooms
        /// </summary>
        public static string Client_YourPrivateRooms
        {
            get { return GetString("Client_YourPrivateRooms"); }
        }

        /// <summary>
        /// Your Private Rooms
        /// </summary>
        public static string FormatClient_YourPrivateRooms()
        {
            return GetString("Client_YourPrivateRooms");
        }

        /// <summary>
        /// Which room do you want to close?
        /// </summary>
        public static string Close_RoomRequired
        {
            get { return GetString("Close_RoomRequired"); }
        }

        /// <summary>
        /// Which room do you want to close?
        /// </summary>
        public static string FormatClose_RoomRequired()
        {
            return GetString("Close_RoomRequired");
        }

        /// <summary>
        /// {0} is ambiguous: {1}.
        /// </summary>
        public static string CommandAmbiguous
        {
            get { return GetString("CommandAmbiguous"); }
        }

        /// <summary>
        /// {0} is ambiguous: {1}.
        /// </summary>
        public static string FormatCommandAmbiguous(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("CommandAmbiguous"), p0, p1);
        }

        /// <summary>
        /// {0} is not a valid command.
        /// </summary>
        public static string CommandNotFound
        {
            get { return GetString("CommandNotFound"); }
        }

        /// <summary>
        /// {0} is not a valid command.
        /// </summary>
        public static string FormatCommandNotFound(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("CommandNotFound"), p0);
        }

        /// <summary>
        /// Paste (click to show/hide)
        /// </summary>
        public static string Content_PasteHeaderAndToggle
        {
            get { return GetString("Content_PasteHeaderAndToggle"); }
        }

        /// <summary>
        /// Paste (click to show/hide)
        /// </summary>
        public static string FormatContent_PasteHeaderAndToggle()
        {
            return GetString("Content_PasteHeaderAndToggle");
        }

        /// <summary>
        /// Sorry, but the country ISO code you requested doesn't exist. Please refer to http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2 for a proper list of country ISO codes.
        /// </summary>
        public static string CountryISOInvalid
        {
            get { return GetString("CountryISOInvalid"); }
        }

        /// <summary>
        /// Sorry, but the country ISO code you requested doesn't exist. Please refer to http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2 for a proper list of country ISO codes.
        /// </summary>
        public static string FormatCountryISOInvalid()
        {
            return GetString("CountryISOInvalid");
        }

        /// <summary>
        /// No milestone
        /// </summary>
        public static string GithubContent_NoMilestone
        {
            get { return GetString("GithubContent_NoMilestone"); }
        }

        /// <summary>
        /// No milestone
        /// </summary>
        public static string FormatGithubContent_NoMilestone()
        {
            return GetString("GithubContent_NoMilestone");
        }

        /// <summary>
        /// &lt;a href="#" class="github-issue-user-{0}" target="_blank"&gt;{0}&lt;/a&gt; is assigned
        /// </summary>
        public static string GithubContent_UserAssigned
        {
            get { return GetString("GithubContent_UserAssigned"); }
        }

        /// <summary>
        /// &lt;a href="#" class="github-issue-user-{0}" target="_blank"&gt;{0}&lt;/a&gt; is assigned
        /// </summary>
        public static string FormatGithubContent_UserAssigned(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("GithubContent_UserAssigned"), p0);
        }

        /// <summary>
        /// &lt;a href="#" class="github-issue-user-{0}" target="_blank"&gt;{0}&lt;/a&gt; commented &lt;time class="js-relative-date" datetime="{1}"&gt;{1}&lt;/time&gt;
        /// </summary>
        public static string GithubContent_UserCommentedAtTime
        {
            get { return GetString("GithubContent_UserCommentedAtTime"); }
        }

        /// <summary>
        /// &lt;a href="#" class="github-issue-user-{0}" target="_blank"&gt;{0}&lt;/a&gt; commented &lt;time class="js-relative-date" datetime="{1}"&gt;{1}&lt;/time&gt;
        /// </summary>
        public static string FormatGithubContent_UserCommentedAtTime(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("GithubContent_UserCommentedAtTime"), p0, p1);
        }

        /// <summary>
        /// &lt;a href="#" class="github-issue-user-{0}" target="_blank"&gt;{0}&lt;/a&gt; opened this issue &lt;time class="js-relative-date" datetime="{1}"&gt;{1}&lt;/time&gt;
        /// </summary>
        public static string GithubContent_UserOpenedIssueAtTime
        {
            get { return GetString("GithubContent_UserOpenedIssueAtTime"); }
        }

        /// <summary>
        /// &lt;a href="#" class="github-issue-user-{0}" target="_blank"&gt;{0}&lt;/a&gt; opened this issue &lt;time class="js-relative-date" datetime="{1}"&gt;{1}&lt;/time&gt;
        /// </summary>
        public static string FormatGithubContent_UserOpenedIssueAtTime(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("GithubContent_UserOpenedIssueAtTime"), p0, p1);
        }

        /// <summary>
        /// Google Maps
        /// </summary>
        public static string GoogleMapsContent_DefaultTitle
        {
            get { return GetString("GoogleMapsContent_DefaultTitle"); }
        }

        /// <summary>
        /// Google Maps
        /// </summary>
        public static string FormatGoogleMapsContent_DefaultTitle()
        {
            return GetString("GoogleMapsContent_DefaultTitle");
        }

        /// <summary>
        /// Gravatar Profile: {0} (click to show/hide)
        /// </summary>
        public static string GravatarContent_HeaderAndToggle
        {
            get { return GetString("GravatarContent_HeaderAndToggle"); }
        }

        /// <summary>
        /// Gravatar Profile: {0} (click to show/hide)
        /// </summary>
        public static string FormatGravatarContent_HeaderAndToggle(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("GravatarContent_HeaderAndToggle"), p0);
        }

        /// <summary>
        /// Which email address do you want to use for the Gravatar image?
        /// </summary>
        public static string Gravatar_EmailRequired
        {
            get { return GetString("Gravatar_EmailRequired"); }
        }

        /// <summary>
        /// Which email address do you want to use for the Gravatar image?
        /// </summary>
        public static string FormatGravatar_EmailRequired()
        {
            return GetString("Gravatar_EmailRequired");
        }

        /// <summary>
        /// Only private rooms can have invite codes.
        /// </summary>
        public static string InviteCode_PrivateRoomRequired
        {
            get { return GetString("InviteCode_PrivateRoomRequired"); }
        }

        /// <summary>
        /// Only private rooms can have invite codes.
        /// </summary>
        public static string FormatInviteCode_PrivateRoomRequired()
        {
            return GetString("InviteCode_PrivateRoomRequired");
        }

        /// <summary>
        /// Which room do you want to show the invite code for?
        /// </summary>
        public static string InviteCode_RoomRequired
        {
            get { return GetString("InviteCode_RoomRequired"); }
        }

        /// <summary>
        /// Which room do you want to show the invite code for?
        /// </summary>
        public static string FormatInviteCode_RoomRequired()
        {
            return GetString("InviteCode_RoomRequired");
        }

        /// <summary>
        /// Invite Code for {0}: {1}
        /// </summary>
        public static string InviteCode_Success
        {
            get { return GetString("InviteCode_Success"); }
        }

        /// <summary>
        /// Invite Code for {0}: {1}
        /// </summary>
        public static string FormatInviteCode_Success(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("InviteCode_Success"), p0, p1);
        }

        /// <summary>
        /// You can't invite yourself!
        /// </summary>
        public static string Invite_CannotInviteSelf
        {
            get { return GetString("Invite_CannotInviteSelf"); }
        }

        /// <summary>
        /// You can't invite yourself!
        /// </summary>
        public static string FormatInvite_CannotInviteSelf()
        {
            return GetString("Invite_CannotInviteSelf");
        }

        /// <summary>
        /// Which room do you want to invite them to?
        /// </summary>
        public static string Invite_RoomRequired
        {
            get { return GetString("Invite_RoomRequired"); }
        }

        /// <summary>
        /// Which room do you want to invite them to?
        /// </summary>
        public static string FormatInvite_RoomRequired()
        {
            return GetString("Invite_RoomRequired");
        }

        /// <summary>
        /// Who do you want to invite?
        /// </summary>
        public static string Invite_UserRequired
        {
            get { return GetString("Invite_UserRequired"); }
        }

        /// <summary>
        /// Who do you want to invite?
        /// </summary>
        public static string FormatInvite_UserRequired()
        {
            return GetString("Invite_UserRequired");
        }

        /// <summary>
        /// This command cannot be invoked from the Lobby.
        /// </summary>
        public static string InvokeFromRoomRequired
        {
            get { return GetString("InvokeFromRoomRequired"); }
        }

        /// <summary>
        /// This command cannot be invoked from the Lobby.
        /// </summary>
        public static string FormatInvokeFromRoomRequired()
        {
            return GetString("InvokeFromRoomRequired");
        }

        /// <summary>
        /// Join Me Meeting: {0}
        /// </summary>
        public static string JoinMeContent_DefaultTitle
        {
            get { return GetString("JoinMeContent_DefaultTitle"); }
        }

        /// <summary>
        /// Join Me Meeting: {0}
        /// </summary>
        public static string FormatJoinMeContent_DefaultTitle(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("JoinMeContent_DefaultTitle"), p0);
        }

        /// <summary>
        /// Unable to join {0}. This room is locked and you don't have permission to enter. If you have an invite code, enter it in the /join command
        /// </summary>
        public static string Join_LockedAccessPermission
        {
            get { return GetString("Join_LockedAccessPermission"); }
        }

        /// <summary>
        /// Unable to join {0}. This room is locked and you don't have permission to enter. If you have an invite code, enter it in the /join command
        /// </summary>
        public static string FormatJoin_LockedAccessPermission(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Join_LockedAccessPermission"), p0);
        }

        /// <summary>
        /// Which room do you want to join?
        /// </summary>
        public static string Join_RoomRequired
        {
            get { return GetString("Join_RoomRequired"); }
        }

        /// <summary>
        /// Which room do you want to join?
        /// </summary>
        public static string FormatJoin_RoomRequired()
        {
            return GetString("Join_RoomRequired");
        }

        /// <summary>
        /// You cannot kick an admin. Only admin can kick admin.
        /// </summary>
        public static string Kick_AdminRequiredToKickAdmin
        {
            get { return GetString("Kick_AdminRequiredToKickAdmin"); }
        }

        /// <summary>
        /// You cannot kick an admin. Only admin can kick admin.
        /// </summary>
        public static string FormatKick_AdminRequiredToKickAdmin()
        {
            return GetString("Kick_AdminRequiredToKickAdmin");
        }

        /// <summary>
        /// Why would you want to kick yourself?
        /// </summary>
        public static string Kick_CannotKickSelf
        {
            get { return GetString("Kick_CannotKickSelf"); }
        }

        /// <summary>
        /// Why would you want to kick yourself?
        /// </summary>
        public static string FormatKick_CannotKickSelf()
        {
            return GetString("Kick_CannotKickSelf");
        }

        /// <summary>
        /// Owners cannot kick other owners. Only the room creator can kick an owner.
        /// </summary>
        public static string Kick_CreatorRequiredToKickOwner
        {
            get { return GetString("Kick_CreatorRequiredToKickOwner"); }
        }

        /// <summary>
        /// Owners cannot kick other owners. Only the room creator can kick an owner.
        /// </summary>
        public static string FormatKick_CreatorRequiredToKickOwner()
        {
            return GetString("Kick_CreatorRequiredToKickOwner");
        }

        /// <summary>
        /// Which room do you want to kick them from?
        /// </summary>
        public static string Kick_RoomRequired
        {
            get { return GetString("Kick_RoomRequired"); }
        }

        /// <summary>
        /// Which room do you want to kick them from?
        /// </summary>
        public static string FormatKick_RoomRequired()
        {
            return GetString("Kick_RoomRequired");
        }

        /// <summary>
        /// Who do you want to to kick?
        /// </summary>
        public static string Kick_UserRequired
        {
            get { return GetString("Kick_UserRequired"); }
        }

        /// <summary>
        /// Who do you want to to kick?
        /// </summary>
        public static string FormatKick_UserRequired()
        {
            return GetString("Kick_UserRequired");
        }

        /// <summary>
        /// Which room do you want to leave?
        /// </summary>
        public static string Leave_RoomRequired
        {
            get { return GetString("Leave_RoomRequired"); }
        }

        /// <summary>
        /// Which room do you want to leave?
        /// </summary>
        public static string FormatLeave_RoomRequired()
        {
            return GetString("Leave_RoomRequired");
        }

        /// <summary>
        /// Which room do you want to list the current users of?
        /// </summary>
        public static string List_RoomRequired
        {
            get { return GetString("List_RoomRequired"); }
        }

        /// <summary>
        /// Which room do you want to list the current users of?
        /// </summary>
        public static string FormatList_RoomRequired()
        {
            return GetString("List_RoomRequired");
        }

        /// <summary>
        /// Loading...
        /// </summary>
        public static string LoadingMessage
        {
            get { return GetString("LoadingMessage"); }
        }

        /// <summary>
        /// Loading...
        /// </summary>
        public static string FormatLoadingMessage()
        {
            return GetString("LoadingMessage");
        }

        /// <summary>
        /// Which room do you want to lock?
        /// </summary>
        public static string Lock_RoomRequired
        {
            get { return GetString("Lock_RoomRequired"); }
        }

        /// <summary>
        /// Which room do you want to lock?
        /// </summary>
        public static string FormatLock_RoomRequired()
        {
            return GetString("Lock_RoomRequired");
        }

        /// <summary>
        /// You what?
        /// </summary>
        public static string Me_ActionRequired
        {
            get { return GetString("Me_ActionRequired"); }
        }

        /// <summary>
        /// You what?
        /// </summary>
        public static string FormatMe_ActionRequired()
        {
            return GetString("Me_ActionRequired");
        }

        /// <summary>
        /// You can't private message yourself!
        /// </summary>
        public static string Msg_CannotMsgSelf
        {
            get { return GetString("Msg_CannotMsgSelf"); }
        }

        /// <summary>
        /// You can't private message yourself!
        /// </summary>
        public static string FormatMsg_CannotMsgSelf()
        {
            return GetString("Msg_CannotMsgSelf");
        }

        /// <summary>
        /// What do you want to say to {0}?
        /// </summary>
        public static string Msg_MessageRequired
        {
            get { return GetString("Msg_MessageRequired"); }
        }

        /// <summary>
        /// What do you want to say to {0}?
        /// </summary>
        public static string FormatMsg_MessageRequired(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Msg_MessageRequired"), p0);
        }

        /// <summary>
        /// Who do you want to send a private message to?
        /// </summary>
        public static string Msg_UserRequired
        {
            get { return GetString("Msg_UserRequired"); }
        }

        /// <summary>
        /// Who do you want to send a private message to?
        /// </summary>
        public static string FormatMsg_UserRequired()
        {
            return GetString("Msg_UserRequired");
        }

        /// <summary>
        /// Sorry, but your {1} is too long. Please keep it under {0} characters.
        /// </summary>
        public static string NoteTooLong
        {
            get { return GetString("NoteTooLong"); }
        }

        /// <summary>
        /// Sorry, but your {1} is too long. Please keep it under {0} characters.
        /// </summary>
        public static string FormatNoteTooLong(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("NoteTooLong"), p0, p1);
        }

        /// <summary>
        /// Notifications
        /// </summary>
        public static string Notifications
        {
            get { return GetString("Notifications"); }
        }

        /// <summary>
        /// Notifications
        /// </summary>
        public static string FormatNotifications()
        {
            return GetString("Notifications");
        }

        /// <summary>
        /// All Notifications
        /// </summary>
        public static string Notifications_AllNotifications
        {
            get { return GetString("Notifications_AllNotifications"); }
        }

        /// <summary>
        /// All Notifications
        /// </summary>
        public static string FormatNotifications_AllNotifications()
        {
            return GetString("Notifications_AllNotifications");
        }

        /// <summary>
        /// Mark All as Read
        /// </summary>
        public static string Notifications_MarkAllRead
        {
            get { return GetString("Notifications_MarkAllRead"); }
        }

        /// <summary>
        /// Mark All as Read
        /// </summary>
        public static string FormatNotifications_MarkAllRead()
        {
            return GetString("Notifications_MarkAllRead");
        }

        /// <summary>
        /// Mark Notification as Read
        /// </summary>
        public static string Notifications_MarkAsRead
        {
            get { return GetString("Notifications_MarkAsRead"); }
        }

        /// <summary>
        /// Mark Notification as Read
        /// </summary>
        public static string FormatNotifications_MarkAsRead()
        {
            return GetString("Notifications_MarkAsRead");
        }

        /// <summary>
        /// {0} in &lt;strong&gt;&lt;cite&gt;{1}&lt;/cite&gt;&lt;/strong&gt; on &lt;span class="time" data-timestamp="{2}"&gt;&lt;/span&gt;
        /// </summary>
        public static string Notifications_MetadataInfo
        {
            get { return GetString("Notifications_MetadataInfo"); }
        }

        /// <summary>
        /// {0} in &lt;strong&gt;&lt;cite&gt;{1}&lt;/cite&gt;&lt;/strong&gt; on &lt;span class="time" data-timestamp="{2}"&gt;&lt;/span&gt;
        /// </summary>
        public static string FormatNotifications_MetadataInfo(object p0, object p1, object p2)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Notifications_MetadataInfo"), p0, p1, p2);
        }

        /// <summary>
        /// No unread notifications!
        /// </summary>
        public static string Notifications_NoUnread
        {
            get { return GetString("Notifications_NoUnread"); }
        }

        /// <summary>
        /// No unread notifications!
        /// </summary>
        public static string FormatNotifications_NoUnread()
        {
            return GetString("Notifications_NoUnread");
        }

        /// <summary>
        /// Unread &lt;span id="js-unread-counter" data-unread="{0}" class="pull-right"&gt;{0}&lt;/span&gt;
        /// </summary>
        public static string Notifications_UnreadWithCount
        {
            get { return GetString("Notifications_UnreadWithCount"); }
        }

        /// <summary>
        /// Unread &lt;span id="js-unread-counter" data-unread="{0}" class="pull-right"&gt;{0}&lt;/span&gt;
        /// </summary>
        public static string FormatNotifications_UnreadWithCount(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Notifications_UnreadWithCount"), p0);
        }

        /// <summary>
        /// Room can only be nudged once every {0} seconds.
        /// </summary>
        public static string NudgeRoom_Throttled
        {
            get { return GetString("NudgeRoom_Throttled"); }
        }

        /// <summary>
        /// Room can only be nudged once every {0} seconds.
        /// </summary>
        public static string FormatNudgeRoom_Throttled(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("NudgeRoom_Throttled"), p0);
        }

        /// <summary>
        /// You can't nudge yourself!
        /// </summary>
        public static string NudgeUser_CannotNudgeSelf
        {
            get { return GetString("NudgeUser_CannotNudgeSelf"); }
        }

        /// <summary>
        /// You can't nudge yourself!
        /// </summary>
        public static string FormatNudgeUser_CannotNudgeSelf()
        {
            return GetString("NudgeUser_CannotNudgeSelf");
        }

        /// <summary>
        /// User can only be nudged once every {0} seconds.
        /// </summary>
        public static string NudgeUser_Throttled
        {
            get { return GetString("NudgeUser_Throttled"); }
        }

        /// <summary>
        /// User can only be nudged once every {0} seconds.
        /// </summary>
        public static string FormatNudgeUser_Throttled(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("NudgeUser_Throttled"), p0);
        }

        /// <summary>
        /// Which room do you want to open?
        /// </summary>
        public static string Open_RoomRequired
        {
            get { return GetString("Open_RoomRequired"); }
        }

        /// <summary>
        /// Which room do you want to open?
        /// </summary>
        public static string FormatOpen_RoomRequired()
        {
            return GetString("Open_RoomRequired");
        }

        /// <summary>
        /// You're not allowed to post a notification.
        /// </summary>
        public static string PostNotification_NotAllowed
        {
            get { return GetString("PostNotification_NotAllowed"); }
        }

        /// <summary>
        /// You're not allowed to post a notification.
        /// </summary>
        public static string FormatPostNotification_NotAllowed()
        {
            return GetString("PostNotification_NotAllowed");
        }

        /// <summary>
        /// Which admin do you want to remove?
        /// </summary>
        public static string RemoveAdmin_UserRequired
        {
            get { return GetString("RemoveAdmin_UserRequired"); }
        }

        /// <summary>
        /// Which admin do you want to remove?
        /// </summary>
        public static string FormatRemoveAdmin_UserRequired()
        {
            return GetString("RemoveAdmin_UserRequired");
        }

        /// <summary>
        /// Which room do you want to remove the owner from?
        /// </summary>
        public static string RemoveOwner_RoomRequired
        {
            get { return GetString("RemoveOwner_RoomRequired"); }
        }

        /// <summary>
        /// Which room do you want to remove the owner from?
        /// </summary>
        public static string FormatRemoveOwner_RoomRequired()
        {
            return GetString("RemoveOwner_RoomRequired");
        }

        /// <summary>
        /// Which owner do you want to remove?
        /// </summary>
        public static string RemoveOwner_UserRequired
        {
            get { return GetString("RemoveOwner_UserRequired"); }
        }

        /// <summary>
        /// Which owner do you want to remove?
        /// </summary>
        public static string FormatRemoveOwner_UserRequired()
        {
            return GetString("RemoveOwner_UserRequired");
        }

        /// <summary>
        /// Which room do you want to reset the invite code of?
        /// </summary>
        public static string ResetInviteCode_RoomRequired
        {
            get { return GetString("ResetInviteCode_RoomRequired"); }
        }

        /// <summary>
        /// Which room do you want to reset the invite code of?
        /// </summary>
        public static string FormatResetInviteCode_RoomRequired()
        {
            return GetString("ResetInviteCode_RoomRequired");
        }

        /// <summary>
        /// You do not have access to {0}.
        /// </summary>
        public static string RoomAccessPermission
        {
            get { return GetString("RoomAccessPermission"); }
        }

        /// <summary>
        /// You do not have access to {0}.
        /// </summary>
        public static string FormatRoomAccessPermission(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("RoomAccessPermission"), p0);
        }

        /// <summary>
        /// {0} isn't allowed to access {1}.
        /// </summary>
        public static string RoomAccessPermissionUser
        {
            get { return GetString("RoomAccessPermissionUser"); }
        }

        /// <summary>
        /// {0} isn't allowed to access {1}.
        /// </summary>
        public static string FormatRoomAccessPermissionUser(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("RoomAccessPermissionUser"), p0, p1);
        }

        /// <summary>
        /// {0} is already closed.
        /// </summary>
        public static string RoomAlreadyClosed
        {
            get { return GetString("RoomAlreadyClosed"); }
        }

        /// <summary>
        /// {0} is already closed.
        /// </summary>
        public static string FormatRoomAlreadyClosed(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("RoomAlreadyClosed"), p0);
        }

        /// <summary>
        /// {0} is already locked.
        /// </summary>
        public static string RoomAlreadyLocked
        {
            get { return GetString("RoomAlreadyLocked"); }
        }

        /// <summary>
        /// {0} is already locked.
        /// </summary>
        public static string FormatRoomAlreadyLocked(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("RoomAlreadyLocked"), p0);
        }

        /// <summary>
        /// {0} is already open.
        /// </summary>
        public static string RoomAlreadyOpen
        {
            get { return GetString("RoomAlreadyOpen"); }
        }

        /// <summary>
        /// {0} is already open.
        /// </summary>
        public static string FormatRoomAlreadyOpen(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("RoomAlreadyOpen"), p0);
        }

        /// <summary>
        /// Lobby is not a valid chat room name.
        /// </summary>
        public static string RoomCannotBeNamedLobby
        {
            get { return GetString("RoomCannotBeNamedLobby"); }
        }

        /// <summary>
        /// Lobby is not a valid chat room name.
        /// </summary>
        public static string FormatRoomCannotBeNamedLobby()
        {
            return GetString("RoomCannotBeNamedLobby");
        }

        /// <summary>
        /// {0} is closed.
        /// </summary>
        public static string RoomClosed
        {
            get { return GetString("RoomClosed"); }
        }

        /// <summary>
        /// {0} is closed.
        /// </summary>
        public static string FormatRoomClosed(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("RoomClosed"), p0);
        }

        /// <summary>
        /// Room creation is disabled.
        /// </summary>
        public static string RoomCreationDisabled
        {
            get { return GetString("RoomCreationDisabled"); }
        }

        /// <summary>
        /// Room creation is disabled.
        /// </summary>
        public static string FormatRoomCreationDisabled()
        {
            return GetString("RoomCreationDisabled");
        }

        /// <summary>
        /// You are not the creator of {0}.
        /// </summary>
        public static string RoomCreatorRequired
        {
            get { return GetString("RoomCreatorRequired"); }
        }

        /// <summary>
        /// You are not the creator of {0}.
        /// </summary>
        public static string FormatRoomCreatorRequired(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("RoomCreatorRequired"), p0);
        }

        /// <summary>
        /// {0} already exists.
        /// </summary>
        public static string RoomExists
        {
            get { return GetString("RoomExists"); }
        }

        /// <summary>
        /// {0} already exists.
        /// </summary>
        public static string FormatRoomExists(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("RoomExists"), p0);
        }

        /// <summary>
        /// {0} already exists, but it's closed.
        /// </summary>
        public static string RoomExistsButClosed
        {
            get { return GetString("RoomExistsButClosed"); }
        }

        /// <summary>
        /// {0} already exists, but it's closed.
        /// </summary>
        public static string FormatRoomExistsButClosed(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("RoomExistsButClosed"), p0);
        }

        /// <summary>
        /// {0} is not a valid room name.
        /// </summary>
        public static string RoomInvalidName
        {
            get { return GetString("RoomInvalidName"); }
        }

        /// <summary>
        /// {0} is not a valid room name.
        /// </summary>
        public static string FormatRoomInvalidName(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("RoomInvalidName"), p0);
        }

        /// <summary>
        /// Room names cannot contain spaces.
        /// </summary>
        public static string RoomInvalidNameSpaces
        {
            get { return GetString("RoomInvalidNameSpaces"); }
        }

        /// <summary>
        /// Room names cannot contain spaces.
        /// </summary>
        public static string FormatRoomInvalidNameSpaces()
        {
            return GetString("RoomInvalidNameSpaces");
        }

        /// <summary>
        /// Use '/join room' to join a room.
        /// </summary>
        public static string RoomJoinMessage
        {
            get { return GetString("RoomJoinMessage"); }
        }

        /// <summary>
        /// Use '/join room' to join a room.
        /// </summary>
        public static string FormatRoomJoinMessage()
        {
            return GetString("RoomJoinMessage");
        }

        /// <summary>
        /// You're in {0}, but it doesn't exist.
        /// </summary>
        public static string RoomMemberButNotExists
        {
            get { return GetString("RoomMemberButNotExists"); }
        }

        /// <summary>
        /// You're in {0}, but it doesn't exist.
        /// </summary>
        public static string FormatRoomMemberButNotExists(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("RoomMemberButNotExists"), p0);
        }

        /// <summary>
        /// Room name cannot be blank!
        /// </summary>
        public static string RoomNameCannotBeBlank
        {
            get { return GetString("RoomNameCannotBeBlank"); }
        }

        /// <summary>
        /// Room name cannot be blank!
        /// </summary>
        public static string FormatRoomNameCannotBeBlank()
        {
            return GetString("RoomNameCannotBeBlank");
        }

        /// <summary>
        /// Room name cannot contain spaces!
        /// </summary>
        public static string RoomNameCannotContainSpaces
        {
            get { return GetString("RoomNameCannotContainSpaces"); }
        }

        /// <summary>
        /// Room name cannot contain spaces!
        /// </summary>
        public static string FormatRoomNameCannotContainSpaces()
        {
            return GetString("RoomNameCannotContainSpaces");
        }

        /// <summary>
        /// Unable to find {0}.
        /// </summary>
        public static string RoomNotFound
        {
            get { return GetString("RoomNotFound"); }
        }

        /// <summary>
        /// Unable to find {0}.
        /// </summary>
        public static string FormatRoomNotFound(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("RoomNotFound"), p0);
        }

        /// <summary>
        /// You're not in {0}. Use '/join {0}' to join it.
        /// </summary>
        public static string RoomNotMember
        {
            get { return GetString("RoomNotMember"); }
        }

        /// <summary>
        /// You're not in {0}. Use '/join {0}' to join it.
        /// </summary>
        public static string FormatRoomNotMember(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("RoomNotMember"), p0);
        }

        /// <summary>
        /// {0} is not a private room.
        /// </summary>
        public static string RoomNotPrivate
        {
            get { return GetString("RoomNotPrivate"); }
        }

        /// <summary>
        /// {0} is not a private room.
        /// </summary>
        public static string FormatRoomNotPrivate(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("RoomNotPrivate"), p0);
        }

        /// <summary>
        /// You are not an owner of {0}.
        /// </summary>
        public static string RoomOwnerRequired
        {
            get { return GetString("RoomOwnerRequired"); }
        }

        /// <summary>
        /// You are not an owner of {0}.
        /// </summary>
        public static string FormatRoomOwnerRequired(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("RoomOwnerRequired"), p0);
        }

        /// <summary>
        /// No room specified.
        /// </summary>
        public static string RoomRequired
        {
            get { return GetString("RoomRequired"); }
        }

        /// <summary>
        /// No room specified.
        /// </summary>
        public static string FormatRoomRequired()
        {
            return GetString("RoomRequired");
        }

        /// <summary>
        /// {0} is already allowed into {1}.
        /// </summary>
        public static string RoomUserAlreadyAllowed
        {
            get { return GetString("RoomUserAlreadyAllowed"); }
        }

        /// <summary>
        /// {0} is already allowed into {1}.
        /// </summary>
        public static string FormatRoomUserAlreadyAllowed(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("RoomUserAlreadyAllowed"), p0, p1);
        }

        /// <summary>
        /// {0} is already an owner of {1}.
        /// </summary>
        public static string RoomUserAlreadyOwner
        {
            get { return GetString("RoomUserAlreadyOwner"); }
        }

        /// <summary>
        /// {0} is already an owner of {1}.
        /// </summary>
        public static string FormatRoomUserAlreadyOwner(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("RoomUserAlreadyOwner"), p0, p1);
        }

        /// <summary>
        /// You cannot post messages to {0}. The room is closed.
        /// </summary>
        public static string SendMessageRoomClosed
        {
            get { return GetString("SendMessageRoomClosed"); }
        }

        /// <summary>
        /// You cannot post messages to {0}. The room is closed.
        /// </summary>
        public static string FormatSendMessageRoomClosed(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("SendMessageRoomClosed"), p0);
        }

        /// <summary>
        /// Save Settings
        /// </summary>
        public static string SettingsSave
        {
            get { return GetString("SettingsSave"); }
        }

        /// <summary>
        /// Save Settings
        /// </summary>
        public static string FormatSettingsSave()
        {
            return GetString("SettingsSave");
        }

        /// <summary>
        /// Successfully saved the settings.
        /// </summary>
        public static string SettingsSaveSuccess
        {
            get { return GetString("SettingsSaveSuccess"); }
        }

        /// <summary>
        /// Successfully saved the settings.
        /// </summary>
        public static string FormatSettingsSaveSuccess()
        {
            return GetString("SettingsSaveSuccess");
        }

        /// <summary>
        /// Bytes
        /// </summary>
        public static string SizeOrderBytes
        {
            get { return GetString("SizeOrderBytes"); }
        }

        /// <summary>
        /// Bytes
        /// </summary>
        public static string FormatSizeOrderBytes()
        {
            return GetString("SizeOrderBytes");
        }

        /// <summary>
        /// GB
        /// </summary>
        public static string SizeOrderGB
        {
            get { return GetString("SizeOrderGB"); }
        }

        /// <summary>
        /// GB
        /// </summary>
        public static string FormatSizeOrderGB()
        {
            return GetString("SizeOrderGB");
        }

        /// <summary>
        /// KB
        /// </summary>
        public static string SizeOrderKB
        {
            get { return GetString("SizeOrderKB"); }
        }

        /// <summary>
        /// KB
        /// </summary>
        public static string FormatSizeOrderKB()
        {
            return GetString("SizeOrderKB");
        }

        /// <summary>
        /// MB
        /// </summary>
        public static string SizeOrderMB
        {
            get { return GetString("SizeOrderMB"); }
        }

        /// <summary>
        /// MB
        /// </summary>
        public static string FormatSizeOrderMB()
        {
            return GetString("SizeOrderMB");
        }

        /// <summary>
        /// You cannot unallow an admin. Only admin can unallow admin.
        /// </summary>
        public static string UnAllow_AdminRequired
        {
            get { return GetString("UnAllow_AdminRequired"); }
        }

        /// <summary>
        /// You cannot unallow an admin. Only admin can unallow admin.
        /// </summary>
        public static string FormatUnAllow_AdminRequired()
        {
            return GetString("UnAllow_AdminRequired");
        }

        /// <summary>
        /// Why would you want to unallow yourself?
        /// </summary>
        public static string UnAllow_CannotUnallowSelf
        {
            get { return GetString("UnAllow_CannotUnallowSelf"); }
        }

        /// <summary>
        /// Why would you want to unallow yourself?
        /// </summary>
        public static string FormatUnAllow_CannotUnallowSelf()
        {
            return GetString("UnAllow_CannotUnallowSelf");
        }

        /// <summary>
        /// Owners cannot unallow other owners. Only the room creator can unallow an owner.
        /// </summary>
        public static string UnAllow_CreatorRequiredToUnallowOwner
        {
            get { return GetString("UnAllow_CreatorRequiredToUnallowOwner"); }
        }

        /// <summary>
        /// Owners cannot unallow other owners. Only the room creator can unallow an owner.
        /// </summary>
        public static string FormatUnAllow_CreatorRequiredToUnallowOwner()
        {
            return GetString("UnAllow_CreatorRequiredToUnallowOwner");
        }

        /// <summary>
        /// Which room do you want to revoke access from?
        /// </summary>
        public static string UnAllow_RoomRequired
        {
            get { return GetString("UnAllow_RoomRequired"); }
        }

        /// <summary>
        /// Which room do you want to revoke access from?
        /// </summary>
        public static string FormatUnAllow_RoomRequired()
        {
            return GetString("UnAllow_RoomRequired");
        }

        /// <summary>
        /// Who you want to revoke access permissions from?
        /// </summary>
        public static string UnAllow_UserRequired
        {
            get { return GetString("UnAllow_UserRequired"); }
        }

        /// <summary>
        /// Who you want to revoke access permissions from?
        /// </summary>
        public static string FormatUnAllow_UserRequired()
        {
            return GetString("UnAllow_UserRequired");
        }

        /// <summary>
        /// Failed to upload {0}.
        /// </summary>
        public static string UploadFailed
        {
            get { return GetString("UploadFailed"); }
        }

        /// <summary>
        /// Failed to upload {0}.
        /// </summary>
        public static string FormatUploadFailed(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("UploadFailed"), p0);
        }

        /// <summary>
        /// Failed to upload {0}, as it is larger than {1}MB.
        /// </summary>
        public static string UploadTooLarge
        {
            get { return GetString("UploadTooLarge"); }
        }

        /// <summary>
        /// Failed to upload {0}, as it is larger than {1}MB.
        /// </summary>
        public static string FormatUploadTooLarge(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("UploadTooLarge"), p0, p1);
        }

        /// <summary>
        /// Failed to upload {0}. {1}
        /// </summary>
        public static string UploadFailedException
        {
            get { return GetString("UploadFailedException"); }
        }

        /// <summary>
        /// Failed to upload {0}. {1}
        /// </summary>
        public static string FormatUploadFailedException(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("UploadFailedException"), p0, p1);
        }

        /// <summary>
        /// {0} is already an admin.
        /// </summary>
        public static string UserAlreadyAdmin
        {
            get { return GetString("UserAlreadyAdmin"); }
        }

        /// <summary>
        /// {0} is already an admin.
        /// </summary>
        public static string FormatUserAlreadyAdmin(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("UserAlreadyAdmin"), p0);
        }

        /// <summary>
        /// {0} is not a valid user name.
        /// </summary>
        public static string UserInvalidName
        {
            get { return GetString("UserInvalidName"); }
        }

        /// <summary>
        /// {0} is not a valid user name.
        /// </summary>
        public static string FormatUserInvalidName(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("UserInvalidName"), p0);
        }

        /// <summary>
        /// Username {0} already taken.
        /// </summary>
        public static string UserNameTaken
        {
            get { return GetString("UserNameTaken"); }
        }

        /// <summary>
        /// Username {0} already taken.
        /// </summary>
        public static string FormatUserNameTaken(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("UserNameTaken"), p0);
        }

        /// <summary>
        /// {0} is not an admin.
        /// </summary>
        public static string UserNotAdmin
        {
            get { return GetString("UserNotAdmin"); }
        }

        /// <summary>
        /// {0} is not an admin.
        /// </summary>
        public static string FormatUserNotAdmin(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("UserNotAdmin"), p0);
        }

        /// <summary>
        /// Unable to find {0}.
        /// </summary>
        public static string UserNotFound
        {
            get { return GetString("UserNotFound"); }
        }

        /// <summary>
        /// Unable to find {0}.
        /// </summary>
        public static string FormatUserNotFound(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("UserNotFound"), p0);
        }

        /// <summary>
        /// {0} isn't in {1}.
        /// </summary>
        public static string UserNotInRoom
        {
            get { return GetString("UserNotInRoom"); }
        }

        /// <summary>
        /// {0} isn't in {1}.
        /// </summary>
        public static string FormatUserNotInRoom(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("UserNotInRoom"), p0, p1);
        }

        /// <summary>
        /// {0} is not an owner of {1}.
        /// </summary>
        public static string UserNotRoomOwner
        {
            get { return GetString("UserNotRoomOwner"); }
        }

        /// <summary>
        /// {0} is not an owner of {1}.
        /// </summary>
        public static string FormatUserNotRoomOwner(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("UserNotRoomOwner"), p0, p1);
        }

        /// <summary>
        /// View article
        /// </summary>
        public static string ViewArticle
        {
            get { return GetString("ViewArticle"); }
        }

        /// <summary>
        /// View article
        /// </summary>
        public static string FormatViewArticle()
        {
            return GetString("ViewArticle");
        }

        /// <summary>
        /// View Larger Map
        /// </summary>
        public static string ViewLargerMap
        {
            get { return GetString("ViewLargerMap"); }
        }

        /// <summary>
        /// View Larger Map
        /// </summary>
        public static string FormatViewLargerMap()
        {
            return GetString("ViewLargerMap");
        }

        /// <summary>
        /// Who do you want to locate?
        /// </summary>
        public static string Where_UserRequired
        {
            get { return GetString("Where_UserRequired"); }
        }

        /// <summary>
        /// Who do you want to locate?
        /// </summary>
        public static string FormatWhere_UserRequired()
        {
            return GetString("Where_UserRequired");
        }

        /// <summary>
        /// {0} (click to show/hide)
        /// </summary>
        public static string Content_HeaderAndToggle
        {
            get { return GetString("Content_HeaderAndToggle"); }
        }

        /// <summary>
        /// {0} (click to show/hide)
        /// </summary>
        public static string FormatContent_HeaderAndToggle(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Content_HeaderAndToggle"), p0);
        }

        /// <summary>
        /// Grants another user owner permissions on the specified (or current) room. Only works if you're an owner of the room.
        /// </summary>
        public static string AddOwner_CommandInfo
        {
            get { return GetString("AddOwner_CommandInfo"); }
        }

        /// <summary>
        /// Grants another user owner permissions on the specified (or current) room. Only works if you're an owner of the room.
        /// </summary>
        public static string FormatAddOwner_CommandInfo()
        {
            return GetString("AddOwner_CommandInfo");
        }

        /// <summary>
        /// Set a temporary away from keyboard (AFK) note. This note will disappear when you next type something.
        /// </summary>
        public static string AFK_CommandInfo
        {
            get { return GetString("AFK_CommandInfo"); }
        }

        /// <summary>
        /// Set a temporary away from keyboard (AFK) note. This note will disappear when you next type something.
        /// </summary>
        public static string FormatAFK_CommandInfo()
        {
            return GetString("AFK_CommandInfo");
        }

        /// <summary>
        /// Show a list of all users allowed in the specified (or current) room.
        /// </summary>
        public static string Allowed_CommandInfo
        {
            get { return GetString("Allowed_CommandInfo"); }
        }

        /// <summary>
        /// Show a list of all users allowed in the specified (or current) room.
        /// </summary>
        public static string FormatAllowed_CommandInfo()
        {
            return GetString("Allowed_CommandInfo");
        }

        /// <summary>
        /// Grant a user permission to access a private room. Only works if you're an owner of that room.
        /// </summary>
        public static string Allow_CommandInfo
        {
            get { return GetString("Allow_CommandInfo"); }
        }

        /// <summary>
        /// Grant a user permission to access a private room. Only works if you're an owner of that room.
        /// </summary>
        public static string FormatAllow_CommandInfo()
        {
            return GetString("Allow_CommandInfo");
        }

        /// <summary>
        /// Ban a user from JabbR!
        /// </summary>
        public static string Ban_CommandInfo
        {
            get { return GetString("Ban_CommandInfo"); }
        }

        /// <summary>
        /// Ban a user from JabbR!
        /// </summary>
        public static string FormatBan_CommandInfo()
        {
            return GetString("Ban_CommandInfo");
        }

        /// <summary>
        /// Send a message to all users in all rooms. Only works if you're an administrator.
        /// </summary>
        public static string Broadcast_CommandInfo
        {
            get { return GetString("Broadcast_CommandInfo"); }
        }

        /// <summary>
        /// Send a message to all users in all rooms. Only works if you're an administrator.
        /// </summary>
        public static string FormatBroadcast_CommandInfo()
        {
            return GetString("Broadcast_CommandInfo");
        }

        /// <summary>
        /// ADMIN: {0}
        /// </summary>
        public static string Chat_AdminBroadcast
        {
            get { return GetString("Chat_AdminBroadcast"); }
        }

        /// <summary>
        /// ADMIN: {0}
        /// </summary>
        public static string FormatChat_AdminBroadcast(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_AdminBroadcast"), p0);
        }

        /// <summary>
        /// You cannot send messages within the lobby.
        /// </summary>
        public static string Chat_CannotSendLobby
        {
            get { return GetString("Chat_CannotSendLobby"); }
        }

        /// <summary>
        /// You cannot send messages within the lobby.
        /// </summary>
        public static string FormatChat_CannotSendLobby()
        {
            return GetString("Chat_CannotSendLobby");
        }

        /// <summary>
        /// (click to collapse)
        /// </summary>
        public static string Chat_CollapseHiddenMessages
        {
            get { return GetString("Chat_CollapseHiddenMessages"); }
        }

        /// <summary>
        /// (click to collapse)
        /// </summary>
        public static string FormatChat_CollapseHiddenMessages()
        {
            return GetString("Chat_CollapseHiddenMessages");
        }

        /// <summary>
        /// You're chatting in {0}.
        /// </summary>
        public static string Chat_DefaultTopic
        {
            get { return GetString("Chat_DefaultTopic"); }
        }

        /// <summary>
        /// You're chatting in {0}.
        /// </summary>
        public static string FormatChat_DefaultTopic(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_DefaultTopic"), p0);
        }

        /// <summary>
        /// (plus {0} hidden... click to expand)
        /// </summary>
        public static string Chat_ExpandHiddenMessages
        {
            get { return GetString("Chat_ExpandHiddenMessages"); }
        }

        /// <summary>
        /// (plus {0} hidden... click to expand)
        /// </summary>
        public static string FormatChat_ExpandHiddenMessages(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_ExpandHiddenMessages"), p0);
        }

        /// <summary>
        /// Welcome to JabbR
        /// Use ? or type /? to display the FAQ and list of commands.
        /// </summary>
        public static string Chat_InitialMessages
        {
            get { return GetString("Chat_InitialMessages"); }
        }

        /// <summary>
        /// Welcome to JabbR
        /// Use ? or type /? to display the FAQ and list of commands.
        /// </summary>
        public static string FormatChat_InitialMessages()
        {
            return GetString("Chat_InitialMessages");
        }

        /// <summary>
        /// *{0}* *{1}* {2}
        /// </summary>
        public static string Chat_PrivateMessage
        {
            get { return GetString("Chat_PrivateMessage"); }
        }

        /// <summary>
        /// *{0}* *{1}* {2}
        /// </summary>
        public static string FormatChat_PrivateMessage(object p0, object p1, object p2)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_PrivateMessage"), p0, p1, p2);
        }

        /// <summary>
        /// Anyone is allowed in {0} as it is not private.
        /// </summary>
        public static string Chat_RoomNotPrivateAllowed
        {
            get { return GetString("Chat_RoomNotPrivateAllowed"); }
        }

        /// <summary>
        /// Anyone is allowed in {0} as it is not private.
        /// </summary>
        public static string FormatChat_RoomNotPrivateAllowed(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_RoomNotPrivateAllowed"), p0);
        }

        /// <summary>
        /// {0} is now closed.
        /// </summary>
        public static string Chat_RoomNowClosed
        {
            get { return GetString("Chat_RoomNowClosed"); }
        }

        /// <summary>
        /// {0} is now closed.
        /// </summary>
        public static string FormatChat_RoomNowClosed(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_RoomNowClosed"), p0);
        }

        /// <summary>
        /// {0} is now locked.
        /// </summary>
        public static string Chat_RoomNowLocked
        {
            get { return GetString("Chat_RoomNowLocked"); }
        }

        /// <summary>
        /// {0} is now locked.
        /// </summary>
        public static string FormatChat_RoomNowLocked(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_RoomNowLocked"), p0);
        }

        /// <summary>
        /// {0} is now open.
        /// </summary>
        public static string Chat_RoomNowOpen
        {
            get { return GetString("Chat_RoomNowOpen"); }
        }

        /// <summary>
        /// {0} is now open.
        /// </summary>
        public static string FormatChat_RoomNowOpen(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_RoomNowOpen"), p0);
        }

        /// <summary>
        /// No users are allowed in {0}.
        /// </summary>
        public static string Chat_RoomPrivateNoUsersAllowed
        {
            get { return GetString("Chat_RoomPrivateNoUsersAllowed"); }
        }

        /// <summary>
        /// No users are allowed in {0}.
        /// </summary>
        public static string FormatChat_RoomPrivateNoUsersAllowed(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_RoomPrivateNoUsersAllowed"), p0);
        }

        /// <summary>
        /// The following users are allowed in {0}:
        /// </summary>
        public static string Chat_RoomPrivateUsersAllowedResults
        {
            get { return GetString("Chat_RoomPrivateUsersAllowedResults"); }
        }

        /// <summary>
        /// The following users are allowed in {0}:
        /// </summary>
        public static string FormatChat_RoomPrivateUsersAllowedResults(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_RoomPrivateUsersAllowedResults"), p0);
        }

        /// <summary>
        /// No users matched your search.
        /// </summary>
        public static string Chat_RoomSearchEmpty
        {
            get { return GetString("Chat_RoomSearchEmpty"); }
        }

        /// <summary>
        /// No users matched your search.
        /// </summary>
        public static string FormatChat_RoomSearchEmpty()
        {
            return GetString("Chat_RoomSearchEmpty");
        }

        /// <summary>
        /// The following users match your search:
        /// </summary>
        public static string Chat_RoomSearchResults
        {
            get { return GetString("Chat_RoomSearchResults"); }
        }

        /// <summary>
        /// The following users match your search:
        /// </summary>
        public static string FormatChat_RoomSearchResults()
        {
            return GetString("Chat_RoomSearchResults");
        }

        /// <summary>
        /// Room is empty.
        /// </summary>
        public static string Chat_RoomUsersEmpty
        {
            get { return GetString("Chat_RoomUsersEmpty"); }
        }

        /// <summary>
        /// Room is empty.
        /// </summary>
        public static string FormatChat_RoomUsersEmpty()
        {
            return GetString("Chat_RoomUsersEmpty");
        }

        /// <summary>
        /// Users in {0}
        /// </summary>
        public static string Chat_RoomUsersHeader
        {
            get { return GetString("Chat_RoomUsersHeader"); }
        }

        /// <summary>
        /// Users in {0}
        /// </summary>
        public static string FormatChat_RoomUsersHeader(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_RoomUsersHeader"), p0);
        }

        /// <summary>
        /// {0} is now an admin.
        /// </summary>
        public static string Chat_UserAdminAllowed
        {
            get { return GetString("Chat_UserAdminAllowed"); }
        }

        /// <summary>
        /// {0} is now an admin.
        /// </summary>
        public static string FormatChat_UserAdminAllowed(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserAdminAllowed"), p0);
        }

        /// <summary>
        /// {0} is no longer an admin.
        /// </summary>
        public static string Chat_UserAdminRevoked
        {
            get { return GetString("Chat_UserAdminRevoked"); }
        }

        /// <summary>
        /// {0} is no longer an admin.
        /// </summary>
        public static string FormatChat_UserAdminRevoked(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserAdminRevoked"), p0);
        }

        /// <summary>
        /// {0} has cleared their flag.
        /// </summary>
        public static string Chat_UserClearedFlag
        {
            get { return GetString("Chat_UserClearedFlag"); }
        }

        /// <summary>
        /// {0} has cleared their flag.
        /// </summary>
        public static string FormatChat_UserClearedFlag(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserClearedFlag"), p0);
        }

        /// <summary>
        /// {0} has cleared the room topic.
        /// </summary>
        public static string Chat_UserClearedRoomTopic
        {
            get { return GetString("Chat_UserClearedRoomTopic"); }
        }

        /// <summary>
        /// {0} has cleared the room topic.
        /// </summary>
        public static string FormatChat_UserClearedRoomTopic(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserClearedRoomTopic"), p0);
        }

        /// <summary>
        /// {0} just entered {1}.
        /// </summary>
        public static string Chat_UserEnteredRoom
        {
            get { return GetString("Chat_UserEnteredRoom"); }
        }

        /// <summary>
        /// {0} just entered {1}.
        /// </summary>
        public static string FormatChat_UserEnteredRoom(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserEnteredRoom"), p0, p1);
        }

        /// <summary>
        /// {0} now has access to {1}.
        /// </summary>
        public static string Chat_UserGrantedRoomAccess
        {
            get { return GetString("Chat_UserGrantedRoomAccess"); }
        }

        /// <summary>
        /// {0} now has access to {1}.
        /// </summary>
        public static string FormatChat_UserGrantedRoomAccess(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserGrantedRoomAccess"), p0, p1);
        }

        /// <summary>
        /// {0} is now an owner of {1}.
        /// </summary>
        public static string Chat_UserGrantedRoomOwnership
        {
            get { return GetString("Chat_UserGrantedRoomOwnership"); }
        }

        /// <summary>
        /// {0} is now an owner of {1}.
        /// </summary>
        public static string FormatChat_UserGrantedRoomOwnership(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserGrantedRoomOwnership"), p0, p1);
        }

        /// <summary>
        /// {0}'s gravatar changed.
        /// </summary>
        public static string Chat_UserGravatarChanged
        {
            get { return GetString("Chat_UserGravatarChanged"); }
        }

        /// <summary>
        /// {0}'s gravatar changed.
        /// </summary>
        public static string FormatChat_UserGravatarChanged(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserGravatarChanged"), p0);
        }

        /// <summary>
        /// Users
        /// </summary>
        public static string Chat_UserHeader
        {
            get { return GetString("Chat_UserHeader"); }
        }

        /// <summary>
        /// Users
        /// </summary>
        public static string FormatChat_UserHeader()
        {
            return GetString("Chat_UserHeader");
        }

        /// <summary>
        /// {0} (Currently {1}) is in the following rooms:
        /// </summary>
        public static string Chat_UserInRooms
        {
            get { return GetString("Chat_UserInRooms"); }
        }

        /// <summary>
        /// {0} (Currently {1}) is in the following rooms:
        /// </summary>
        public static string FormatChat_UserInRooms(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserInRooms"), p0, p1);
        }

        /// <summary>
        /// {0} has invited you to #{1}. Click the room name to join.
        /// </summary>
        public static string Chat_UserInvitedYouToRoom
        {
            get { return GetString("Chat_UserInvitedYouToRoom"); }
        }

        /// <summary>
        /// {0} has invited you to #{1}. Click the room name to join.
        /// </summary>
        public static string FormatChat_UserInvitedYouToRoom(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserInvitedYouToRoom"), p0, p1);
        }

        /// <summary>
        /// {0} has gone AFK.
        /// </summary>
        public static string Chat_UserIsAfk
        {
            get { return GetString("Chat_UserIsAfk"); }
        }

        /// <summary>
        /// {0} has gone AFK.
        /// </summary>
        public static string FormatChat_UserIsAfk(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserIsAfk"), p0);
        }

        /// <summary>
        /// {0} left {1}.
        /// </summary>
        public static string Chat_UserLeftRoom
        {
            get { return GetString("Chat_UserLeftRoom"); }
        }

        /// <summary>
        /// {0} left {1}.
        /// </summary>
        public static string FormatChat_UserLeftRoom(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserLeftRoom"), p0, p1);
        }

        /// <summary>
        /// {0} has locked {1}.
        /// </summary>
        public static string Chat_UserLockedRoom
        {
            get { return GetString("Chat_UserLockedRoom"); }
        }

        /// <summary>
        /// {0} has locked {1}.
        /// </summary>
        public static string FormatChat_UserLockedRoom(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserLockedRoom"), p0, p1);
        }

        /// <summary>
        /// {0}'s name has changed to {1}.
        /// </summary>
        public static string Chat_UserNameChanged
        {
            get { return GetString("Chat_UserNameChanged"); }
        }

        /// <summary>
        /// {0}'s name has changed to {1}.
        /// </summary>
        public static string FormatChat_UserNameChanged(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserNameChanged"), p0, p1);
        }

        /// <summary>
        /// {0} has cleared their note.
        /// </summary>
        public static string Chat_UserNoteCleared
        {
            get { return GetString("Chat_UserNoteCleared"); }
        }

        /// <summary>
        /// {0} has cleared their note.
        /// </summary>
        public static string FormatChat_UserNoteCleared(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserNoteCleared"), p0);
        }

        /// <summary>
        /// {0} has set their note to "{1}".
        /// </summary>
        public static string Chat_UserNoteSet
        {
            get { return GetString("Chat_UserNoteSet"); }
        }

        /// <summary>
        /// {0} has set their note to "{1}".
        /// </summary>
        public static string FormatChat_UserNoteSet(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserNoteSet"), p0, p1);
        }

        /// <summary>
        /// {0} (Currently {1}) is not in any rooms.
        /// </summary>
        public static string Chat_UserNotInRooms
        {
            get { return GetString("Chat_UserNotInRooms"); }
        }

        /// <summary>
        /// {0} (Currently {1}) is not in any rooms.
        /// </summary>
        public static string FormatChat_UserNotInRooms(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserNotInRooms"), p0, p1);
        }

        /// <summary>
        /// *{0} nudged room {1}.
        /// </summary>
        public static string Chat_UserNudgedRoom
        {
            get { return GetString("Chat_UserNudgedRoom"); }
        }

        /// <summary>
        /// *{0} nudged room {1}.
        /// </summary>
        public static string FormatChat_UserNudgedRoom(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserNudgedRoom"), p0, p1);
        }

        /// <summary>
        /// *{0} nudged {1}.
        /// </summary>
        public static string Chat_UserNudgedUser
        {
            get { return GetString("Chat_UserNudgedUser"); }
        }

        /// <summary>
        /// *{0} nudged {1}.
        /// </summary>
        public static string FormatChat_UserNudgedUser(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserNudgedUser"), p0, p1);
        }

        /// <summary>
        /// *{0} nudged you.
        /// </summary>
        public static string Chat_UserNudgedYou
        {
            get { return GetString("Chat_UserNudgedYou"); }
        }

        /// <summary>
        /// *{0} nudged you.
        /// </summary>
        public static string FormatChat_UserNudgedYou(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserNudgedYou"), p0);
        }

        /// <summary>
        /// Room Owners
        /// </summary>
        public static string Chat_UserOwnerHeader
        {
            get { return GetString("Chat_UserOwnerHeader"); }
        }

        /// <summary>
        /// Room Owners
        /// </summary>
        public static string FormatChat_UserOwnerHeader()
        {
            return GetString("Chat_UserOwnerHeader");
        }

        /// <summary>
        /// {0} does not own any rooms.
        /// </summary>
        public static string Chat_UserOwnsNoRooms
        {
            get { return GetString("Chat_UserOwnsNoRooms"); }
        }

        /// <summary>
        /// {0} does not own any rooms.
        /// </summary>
        public static string FormatChat_UserOwnsNoRooms(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserOwnsNoRooms"), p0);
        }

        /// <summary>
        /// {0} owns the following rooms:
        /// </summary>
        public static string Chat_UserOwnsRooms
        {
            get { return GetString("Chat_UserOwnsRooms"); }
        }

        /// <summary>
        /// {0} owns the following rooms:
        /// </summary>
        public static string FormatChat_UserOwnsRooms(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserOwnsRooms"), p0);
        }

        /// <summary>
        /// *{0} {1}
        /// </summary>
        public static string Chat_UserPerformsAction
        {
            get { return GetString("Chat_UserPerformsAction"); }
        }

        /// <summary>
        /// *{0} {1}
        /// </summary>
        public static string FormatChat_UserPerformsAction(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserPerformsAction"), p0, p1);
        }

        /// <summary>
        /// {0} is no longer an owner of {1}.
        /// </summary>
        public static string Chat_UserRoomOwnershipRevoked
        {
            get { return GetString("Chat_UserRoomOwnershipRevoked"); }
        }

        /// <summary>
        /// {0} is no longer an owner of {1}.
        /// </summary>
        public static string FormatChat_UserRoomOwnershipRevoked(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserRoomOwnershipRevoked"), p0, p1);
        }

        /// <summary>
        /// {0} has set their flag to {1}.
        /// </summary>
        public static string Chat_UserSetFlag
        {
            get { return GetString("Chat_UserSetFlag"); }
        }

        /// <summary>
        /// {0} has set their flag to {1}.
        /// </summary>
        public static string FormatChat_UserSetFlag(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserSetFlag"), p0, p1);
        }

        /// <summary>
        /// {0} has set the room topic to "{1}".
        /// </summary>
        public static string Chat_UserSetRoomTopic
        {
            get { return GetString("Chat_UserSetRoomTopic"); }
        }

        /// <summary>
        /// {0} has set the room topic to "{1}".
        /// </summary>
        public static string FormatChat_UserSetRoomTopic(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserSetRoomTopic"), p0, p1);
        }

        /// <summary>
        /// You are now an admin.
        /// </summary>
        public static string Chat_YouAdminAllowed
        {
            get { return GetString("Chat_YouAdminAllowed"); }
        }

        /// <summary>
        /// You are now an admin.
        /// </summary>
        public static string FormatChat_YouAdminAllowed()
        {
            return GetString("Chat_YouAdminAllowed");
        }

        /// <summary>
        /// You are no longer an admin.
        /// </summary>
        public static string Chat_YouAdminRevoked
        {
            get { return GetString("Chat_YouAdminRevoked"); }
        }

        /// <summary>
        /// You are no longer an admin.
        /// </summary>
        public static string FormatChat_YouAdminRevoked()
        {
            return GetString("Chat_YouAdminRevoked");
        }

        /// <summary>
        /// You have gone AFK.
        /// </summary>
        public static string Chat_YouAreAfk
        {
            get { return GetString("Chat_YouAreAfk"); }
        }

        /// <summary>
        /// You have gone AFK.
        /// </summary>
        public static string FormatChat_YouAreAfk()
        {
            return GetString("Chat_YouAreAfk");
        }

        /// <summary>
        /// You have cleared your flag.
        /// </summary>
        public static string Chat_YouClearedFlag
        {
            get { return GetString("Chat_YouClearedFlag"); }
        }

        /// <summary>
        /// You have cleared your flag.
        /// </summary>
        public static string FormatChat_YouClearedFlag()
        {
            return GetString("Chat_YouClearedFlag");
        }

        /// <summary>
        /// You have cleared the room topic.
        /// </summary>
        public static string Chat_YouClearedRoomTopic
        {
            get { return GetString("Chat_YouClearedRoomTopic"); }
        }

        /// <summary>
        /// You have cleared the room topic.
        /// </summary>
        public static string FormatChat_YouClearedRoomTopic()
        {
            return GetString("Chat_YouClearedRoomTopic");
        }

        /// <summary>
        /// You have cleared the room welcome.
        /// </summary>
        public static string Chat_YouClearedRoomWelcome
        {
            get { return GetString("Chat_YouClearedRoomWelcome"); }
        }

        /// <summary>
        /// You have cleared the room welcome.
        /// </summary>
        public static string FormatChat_YouClearedRoomWelcome()
        {
            return GetString("Chat_YouClearedRoomWelcome");
        }

        /// <summary>
        /// You just entered {0}.
        /// </summary>
        public static string Chat_YouEnteredRoom
        {
            get { return GetString("Chat_YouEnteredRoom"); }
        }

        /// <summary>
        /// You just entered {0}.
        /// </summary>
        public static string FormatChat_YouEnteredRoom(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_YouEnteredRoom"), p0);
        }

        /// <summary>
        /// You have been granted access to {0}.
        /// </summary>
        public static string Chat_YouGrantedRoomAccess
        {
            get { return GetString("Chat_YouGrantedRoomAccess"); }
        }

        /// <summary>
        /// You have been granted access to {0}.
        /// </summary>
        public static string FormatChat_YouGrantedRoomAccess(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_YouGrantedRoomAccess"), p0);
        }

        /// <summary>
        /// You are now an owner of {0}.
        /// </summary>
        public static string Chat_YouGrantedRoomOwnership
        {
            get { return GetString("Chat_YouGrantedRoomOwnership"); }
        }

        /// <summary>
        /// You are now an owner of {0}.
        /// </summary>
        public static string FormatChat_YouGrantedRoomOwnership(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_YouGrantedRoomOwnership"), p0);
        }

        /// <summary>
        /// Invitation to {0} to join #{1} has been sent.
        /// </summary>
        public static string Chat_YouInvitedUserToRoom
        {
            get { return GetString("Chat_YouInvitedUserToRoom"); }
        }

        /// <summary>
        /// Invitation to {0} to join #{1} has been sent.
        /// </summary>
        public static string FormatChat_YouInvitedUserToRoom(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_YouInvitedUserToRoom"), p0, p1);
        }

        /// <summary>
        /// You were kicked from {0} by {1}.
        /// </summary>
        public static string Chat_YouKickedFromRoom
        {
            get { return GetString("Chat_YouKickedFromRoom"); }
        }

        /// <summary>
        /// You were kicked from {0} by {1}.
        /// </summary>
        public static string FormatChat_YouKickedFromRoom(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_YouKickedFromRoom"), p0, p1);
        }

        /// <summary>
        /// You have revoked {0}'s access to {1}.
        /// </summary>
        public static string Chat_YouRevokedUserRoomAccess
        {
            get { return GetString("Chat_YouRevokedUserRoomAccess"); }
        }

        /// <summary>
        /// You have revoked {0}'s access to {1}.
        /// </summary>
        public static string FormatChat_YouRevokedUserRoomAccess(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_YouRevokedUserRoomAccess"), p0, p1);
        }

        /// <summary>
        /// Your gravatar has been set.
        /// </summary>
        public static string Chat_YourGravatarChanged
        {
            get { return GetString("Chat_YourGravatarChanged"); }
        }

        /// <summary>
        /// Your gravatar has been set.
        /// </summary>
        public static string FormatChat_YourGravatarChanged()
        {
            return GetString("Chat_YourGravatarChanged");
        }

        /// <summary>
        /// Your name is now {0}.
        /// </summary>
        public static string Chat_YourNameChanged
        {
            get { return GetString("Chat_YourNameChanged"); }
        }

        /// <summary>
        /// Your name is now {0}.
        /// </summary>
        public static string FormatChat_YourNameChanged(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_YourNameChanged"), p0);
        }

        /// <summary>
        /// Your note has been cleared.
        /// </summary>
        public static string Chat_YourNoteCleared
        {
            get { return GetString("Chat_YourNoteCleared"); }
        }

        /// <summary>
        /// Your note has been cleared.
        /// </summary>
        public static string FormatChat_YourNoteCleared()
        {
            return GetString("Chat_YourNoteCleared");
        }

        /// <summary>
        /// Your note has been set to "{0}".
        /// </summary>
        public static string Chat_YourNoteSet
        {
            get { return GetString("Chat_YourNoteSet"); }
        }

        /// <summary>
        /// Your note has been set to "{0}".
        /// </summary>
        public static string FormatChat_YourNoteSet(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_YourNoteSet"), p0);
        }

        /// <summary>
        /// Your access to {0} has been revoked.
        /// </summary>
        public static string Chat_YourRoomAccessRevoked
        {
            get { return GetString("Chat_YourRoomAccessRevoked"); }
        }

        /// <summary>
        /// Your access to {0} has been revoked.
        /// </summary>
        public static string FormatChat_YourRoomAccessRevoked(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_YourRoomAccessRevoked"), p0);
        }

        /// <summary>
        /// You are no longer an owner of {0}.
        /// </summary>
        public static string Chat_YourRoomOwnershipRevoked
        {
            get { return GetString("Chat_YourRoomOwnershipRevoked"); }
        }

        /// <summary>
        /// You are no longer an owner of {0}.
        /// </summary>
        public static string FormatChat_YourRoomOwnershipRevoked(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_YourRoomOwnershipRevoked"), p0);
        }

        /// <summary>
        /// You have set your flag to {0}.
        /// </summary>
        public static string Chat_YouSetFlag
        {
            get { return GetString("Chat_YouSetFlag"); }
        }

        /// <summary>
        /// You have set your flag to {0}.
        /// </summary>
        public static string FormatChat_YouSetFlag(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_YouSetFlag"), p0);
        }

        /// <summary>
        /// You have set the room topic to "{0}".
        /// </summary>
        public static string Chat_YouSetRoomTopic
        {
            get { return GetString("Chat_YouSetRoomTopic"); }
        }

        /// <summary>
        /// You have set the room topic to "{0}".
        /// </summary>
        public static string FormatChat_YouSetRoomTopic(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_YouSetRoomTopic"), p0);
        }

        /// <summary>
        /// You have set the room welcome to "{0}".
        /// </summary>
        public static string Chat_YouSetRoomWelcome
        {
            get { return GetString("Chat_YouSetRoomWelcome"); }
        }

        /// <summary>
        /// You have set the room welcome to "{0}".
        /// </summary>
        public static string FormatChat_YouSetRoomWelcome(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_YouSetRoomWelcome"), p0);
        }

        /// <summary>
        /// You're connected.
        /// </summary>
        public static string Client_Connected
        {
            get { return GetString("Client_Connected"); }
        }

        /// <summary>
        /// You're connected.
        /// </summary>
        public static string FormatClient_Connected()
        {
            return GetString("Client_Connected");
        }

        /// <summary>
        /// Status: Connected
        /// </summary>
        public static string Client_ConnectedStatus
        {
            get { return GetString("Client_ConnectedStatus"); }
        }

        /// <summary>
        /// Status: Connected
        /// </summary>
        public static string FormatClient_ConnectedStatus()
        {
            return GetString("Client_ConnectedStatus");
        }

        /// <summary>
        /// The connection to JabbR has been lost, trying to reconnect.
        /// </summary>
        public static string Client_Disconnected
        {
            get { return GetString("Client_Disconnected"); }
        }

        /// <summary>
        /// The connection to JabbR has been lost, trying to reconnect.
        /// </summary>
        public static string FormatClient_Disconnected()
        {
            return GetString("Client_Disconnected");
        }

        /// <summary>
        /// Other Rooms
        /// </summary>
        public static string Client_OtherRooms
        {
            get { return GetString("Client_OtherRooms"); }
        }

        /// <summary>
        /// Other Rooms
        /// </summary>
        public static string FormatClient_OtherRooms()
        {
            return GetString("Client_OtherRooms");
        }

        /// <summary>
        /// The connection to JabbR has been temporarily lost, trying to reconnect.
        /// </summary>
        public static string Client_Reconnecting
        {
            get { return GetString("Client_Reconnecting"); }
        }

        /// <summary>
        /// The connection to JabbR has been temporarily lost, trying to reconnect.
        /// </summary>
        public static string FormatClient_Reconnecting()
        {
            return GetString("Client_Reconnecting");
        }

        /// <summary>
        /// Go to the Lobby.
        /// </summary>
        public static string Client_ShortcutLobby
        {
            get { return GetString("Client_ShortcutLobby"); }
        }

        /// <summary>
        /// Go to the Lobby.
        /// </summary>
        public static string FormatClient_ShortcutLobby()
        {
            return GetString("Client_ShortcutLobby");
        }

        /// <summary>
        /// Go to specific Tab.
        /// </summary>
        public static string Client_ShortcutSpecificTab
        {
            get { return GetString("Client_ShortcutSpecificTab"); }
        }

        /// <summary>
        /// Go to specific Tab.
        /// </summary>
        public static string FormatClient_ShortcutSpecificTab()
        {
            return GetString("Client_ShortcutSpecificTab");
        }

        /// <summary>
        /// Go to the next open room tab or Go to the previous open room tab.
        /// </summary>
        public static string Client_ShortcutTabs
        {
            get { return GetString("Client_ShortcutTabs"); }
        }

        /// <summary>
        /// Go to the next open room tab or Go to the previous open room tab.
        /// </summary>
        public static string FormatClient_ShortcutTabs()
        {
            return GetString("Client_ShortcutTabs");
        }

        /// <summary>
        /// Transport: {0}
        /// </summary>
        public static string Client_Transport
        {
            get { return GetString("Client_Transport"); }
        }

        /// <summary>
        /// Transport: {0}
        /// </summary>
        public static string FormatClient_Transport(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Client_Transport"), p0);
        }

        /// <summary>
        /// Uploading {0}.
        /// </summary>
        public static string Client_Uploading
        {
            get { return GetString("Client_Uploading"); }
        }

        /// <summary>
        /// Uploading {0}.
        /// </summary>
        public static string FormatClient_Uploading(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Client_Uploading"), p0);
        }

        /// <summary>
        /// Close the specified (or current) room. Only works if you're an owner of that room.
        /// </summary>
        public static string Close_CommandInfo
        {
            get { return GetString("Close_CommandInfo"); }
        }

        /// <summary>
        /// Close the specified (or current) room. Only works if you're an owner of that room.
        /// </summary>
        public static string FormatClose_CommandInfo()
        {
            return GetString("Close_CommandInfo");
        }

        /// <summary>
        /// Content collapsed because you have rich content disabled.
        /// </summary>
        public static string Content_DisabledMessage
        {
            get { return GetString("Content_DisabledMessage"); }
        }

        /// <summary>
        /// Content collapsed because you have rich content disabled.
        /// </summary>
        public static string FormatContent_DisabledMessage()
        {
            return GetString("Content_DisabledMessage");
        }

        /// <summary>
        /// Create a room with the given name.
        /// </summary>
        public static string Create_CommandInfo
        {
            get { return GetString("Create_CommandInfo"); }
        }

        /// <summary>
        /// Create a room with the given name.
        /// </summary>
        public static string FormatCreate_CommandInfo()
        {
            return GetString("Create_CommandInfo");
        }

        /// <summary>
        /// Show a small flag which represents your nationality. Eg. /flag US for a USA flag. ISO Reference Chart: http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2 (Apologies to people with dual citizenship).
        /// </summary>
        public static string Flag_CommandInfo
        {
            get { return GetString("Flag_CommandInfo"); }
        }

        /// <summary>
        /// Show a small flag which represents your nationality. Eg. /flag US for a USA flag. ISO Reference Chart: http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2 (Apologies to people with dual citizenship).
        /// </summary>
        public static string FormatFlag_CommandInfo()
        {
            return GetString("Flag_CommandInfo");
        }

        /// <summary>
        /// Set your gravatar.
        /// </summary>
        public static string Gravatar_CommandInfo
        {
            get { return GetString("Gravatar_CommandInfo"); }
        }

        /// <summary>
        /// Set your gravatar.
        /// </summary>
        public static string FormatGravatar_CommandInfo()
        {
            return GetString("Gravatar_CommandInfo");
        }

        /// <summary>
        /// Show this list of commands.
        /// </summary>
        public static string Help_CommandInfo
        {
            get { return GetString("Help_CommandInfo"); }
        }

        /// <summary>
        /// Show this list of commands.
        /// </summary>
        public static string FormatHelp_CommandInfo()
        {
            return GetString("Help_CommandInfo");
        }

        /// <summary>
        /// Show the current invite code.
        /// </summary>
        public static string InviteCode_CommandInfo
        {
            get { return GetString("InviteCode_CommandInfo"); }
        }

        /// <summary>
        /// Show the current invite code.
        /// </summary>
        public static string FormatInviteCode_CommandInfo()
        {
            return GetString("InviteCode_CommandInfo");
        }

        /// <summary>
        /// Invite a user to join a room. If it is private they must still either be granted access or given the access code to enter.
        /// </summary>
        public static string Invite_CommandInfo
        {
            get { return GetString("Invite_CommandInfo"); }
        }

        /// <summary>
        /// Invite a user to join a room. If it is private they must still either be granted access or given the access code to enter.
        /// </summary>
        public static string FormatInvite_CommandInfo()
        {
            return GetString("Invite_CommandInfo");
        }

        /// <summary>
        /// Join a room of your choice. If it is private and you have an invite code, enter it after the room name.
        /// </summary>
        public static string Join_CommandInfo
        {
            get { return GetString("Join_CommandInfo"); }
        }

        /// <summary>
        /// Join a room of your choice. If it is private and you have an invite code, enter it after the room name.
        /// </summary>
        public static string FormatJoin_CommandInfo()
        {
            return GetString("Join_CommandInfo");
        }

        /// <summary>
        /// Kick a user from the room. Note, this is only valid for owners of the room.
        /// </summary>
        public static string Kick_CommandInfo
        {
            get { return GetString("Kick_CommandInfo"); }
        }

        /// <summary>
        /// Kick a user from the room. Note, this is only valid for owners of the room.
        /// </summary>
        public static string FormatKick_CommandInfo()
        {
            return GetString("Kick_CommandInfo");
        }

        /// <summary>
        /// Leave the specified (or current) room.
        /// </summary>
        public static string Leave_CommandInfo
        {
            get { return GetString("Leave_CommandInfo"); }
        }

        /// <summary>
        /// Leave the specified (or current) room.
        /// </summary>
        public static string FormatLeave_CommandInfo()
        {
            return GetString("Leave_CommandInfo");
        }

        /// <summary>
        /// Show a list of users in the room.
        /// </summary>
        public static string List_CommandInfo
        {
            get { return GetString("List_CommandInfo"); }
        }

        /// <summary>
        /// Show a list of users in the room.
        /// </summary>
        public static string FormatList_CommandInfo()
        {
            return GetString("List_CommandInfo");
        }

        /// <summary>
        /// Make a room private. Only works if you're the creator of that room.
        /// </summary>
        public static string Lock_CommandInfo
        {
            get { return GetString("Lock_CommandInfo"); }
        }

        /// <summary>
        /// Make a room private. Only works if you're the creator of that room.
        /// </summary>
        public static string FormatLock_CommandInfo()
        {
            return GetString("Lock_CommandInfo");
        }

        /// <summary>
        /// Log this client out from JabbR and remove browser cookie.
        /// </summary>
        public static string Logout_CommandInfo
        {
            get { return GetString("Logout_CommandInfo"); }
        }

        /// <summary>
        /// Log this client out from JabbR and remove browser cookie.
        /// </summary>
        public static string FormatLogout_CommandInfo()
        {
            return GetString("Logout_CommandInfo");
        }

        /// <summary>
        /// Type /me 'does anything'. Sends a message to everyone in the room.
        /// </summary>
        public static string Me_CommandInfo
        {
            get { return GetString("Me_CommandInfo"); }
        }

        /// <summary>
        /// Type /me 'does anything'. Sends a message to everyone in the room.
        /// </summary>
        public static string FormatMe_CommandInfo()
        {
            return GetString("Me_CommandInfo");
        }

        /// <summary>
        /// Post a meme picture using the upboat.me RESTful API.
        /// </summary>
        public static string Meme_CommandInfo
        {
            get { return GetString("Meme_CommandInfo"); }
        }

        /// <summary>
        /// Post a meme picture using the upboat.me RESTful API.
        /// </summary>
        public static string FormatMeme_CommandInfo()
        {
            return GetString("Meme_CommandInfo");
        }

        /// <summary>
        /// What type of meme do you want to generate, and with what message? You need to provide 3 seperate arguments delimeted by spaces. The list of available memes is at: https://upboat.me/List .
        /// </summary>
        public static string Meme_DataRequired
        {
            get { return GetString("Meme_DataRequired"); }
        }

        /// <summary>
        /// What type of meme do you want to generate, and with what message? You need to provide 3 seperate arguments delimeted by spaces. The list of available memes is at: https://upboat.me/List .
        /// </summary>
        public static string FormatMeme_DataRequired()
        {
            return GetString("Meme_DataRequired");
        }

        /// <summary>
        /// Incorrect number of meme arguments. You need to provide 3 seperate arguments delimeted by spaces. Use a dash (eg: your-message) to display a space in your message.
        /// </summary>
        public static string Meme_IncorrectNumberOfArguments
        {
            get { return GetString("Meme_IncorrectNumberOfArguments"); }
        }

        /// <summary>
        /// Incorrect number of meme arguments. You need to provide 3 seperate arguments delimeted by spaces. Use a dash (eg: your-message) to display a space in your message.
        /// </summary>
        public static string FormatMeme_IncorrectNumberOfArguments()
        {
            return GetString("Meme_IncorrectNumberOfArguments");
        }

        /// <summary>
        /// Send a private message to a specified user. @ is optional.
        /// </summary>
        public static string Msg_CommandInfo
        {
            get { return GetString("Msg_CommandInfo"); }
        }

        /// <summary>
        /// Send a private message to a specified user. @ is optional.
        /// </summary>
        public static string FormatMsg_CommandInfo()
        {
            return GetString("Msg_CommandInfo");
        }

        /// <summary>
        /// Set a note against your user account.
        /// </summary>
        public static string Note_CommandInfo
        {
            get { return GetString("Note_CommandInfo"); }
        }

        /// <summary>
        /// Set a note against your user account.
        /// </summary>
        public static string FormatNote_CommandInfo()
        {
            return GetString("Note_CommandInfo");
        }

        /// <summary>
        /// Send a nudge to the current room, or optionally provide a username to nudge that particular user.
        /// </summary>
        public static string Nudge_CommandInfo
        {
            get { return GetString("Nudge_CommandInfo"); }
        }

        /// <summary>
        /// Send a nudge to the current room, or optionally provide a username to nudge that particular user.
        /// </summary>
        public static string FormatNudge_CommandInfo()
        {
            return GetString("Nudge_CommandInfo");
        }

        /// <summary>
        /// Open a closed room. Only works if you're an owner of that room.
        /// </summary>
        public static string Open_CommandInfo
        {
            get { return GetString("Open_CommandInfo"); }
        }

        /// <summary>
        /// Open a closed room. Only works if you're an owner of that room.
        /// </summary>
        public static string FormatOpen_CommandInfo()
        {
            return GetString("Open_CommandInfo");
        }

        /// <summary>
        /// Remove room owner permissions from a user. Only works if you're the creator of that room.
        /// </summary>
        public static string RemoveOwner_CommandInfo
        {
            get { return GetString("RemoveOwner_CommandInfo"); }
        }

        /// <summary>
        /// Remove room owner permissions from a user. Only works if you're the creator of that room.
        /// </summary>
        public static string FormatRemoveOwner_CommandInfo()
        {
            return GetString("RemoveOwner_CommandInfo");
        }

        /// <summary>
        /// Reset the current invite code. This will render the previous invite code invalid.
        /// </summary>
        public static string ResetInviteCode_CommandInfo
        {
            get { return GetString("ResetInviteCode_CommandInfo"); }
        }

        /// <summary>
        /// Reset the current invite code. This will render the previous invite code invalid.
        /// </summary>
        public static string FormatResetInviteCode_CommandInfo()
        {
            return GetString("ResetInviteCode_CommandInfo");
        }

        /// <summary>
        /// Set or clear the room topic. Exclude [topic] to clear the room's topic.
        /// </summary>
        public static string Topic_CommandInfo
        {
            get { return GetString("Topic_CommandInfo"); }
        }

        /// <summary>
        /// Set or clear the room topic. Exclude [topic] to clear the room's topic.
        /// </summary>
        public static string FormatTopic_CommandInfo()
        {
            return GetString("Topic_CommandInfo");
        }

        /// <summary>
        /// Revoke a user's permission to access a private room. Only works if you're an owner of that room.
        /// </summary>
        public static string Unallow_CommandInfo
        {
            get { return GetString("Unallow_CommandInfo"); }
        }

        /// <summary>
        /// Revoke a user's permission to access a private room. Only works if you're an owner of that room.
        /// </summary>
        public static string FormatUnallow_CommandInfo()
        {
            return GetString("Unallow_CommandInfo");
        }

        /// <summary>
        /// Set or clear the welcome message displayed when users enter the room. Exclude [message] to remove the welcome.
        /// </summary>
        public static string Welcome_CommandInfo
        {
            get { return GetString("Welcome_CommandInfo"); }
        }

        /// <summary>
        /// Set or clear the welcome message displayed when users enter the room. Exclude [message] to remove the welcome.
        /// </summary>
        public static string FormatWelcome_CommandInfo()
        {
            return GetString("Welcome_CommandInfo");
        }

        /// <summary>
        /// List the rooms that user is in.
        /// </summary>
        public static string Where_CommandInfo
        {
            get { return GetString("Where_CommandInfo"); }
        }

        /// <summary>
        /// List the rooms that user is in.
        /// </summary>
        public static string FormatWhere_CommandInfo()
        {
            return GetString("Where_CommandInfo");
        }

        /// <summary>
        /// Show a list of all users, Use [name] to show specific information about that user.
        /// </summary>
        public static string Who_CommandInfo
        {
            get { return GetString("Who_CommandInfo"); }
        }

        /// <summary>
        /// Show a list of all users, Use [name] to show specific information about that user.
        /// </summary>
        public static string FormatWho_CommandInfo()
        {
            return GetString("Who_CommandInfo");
        }

        /// <summary>
        /// No email found for {0}.
        /// </summary>
        public static string Account_NoEmailForUser
        {
            get { return GetString("Account_NoEmailForUser"); }
        }

        /// <summary>
        /// No email found for {0}.
        /// </summary>
        public static string FormatAccount_NoEmailForUser(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Account_NoEmailForUser"), p0);
        }

        /// <summary>
        /// User {0} could not be found.
        /// </summary>
        public static string Account_NoMatchingUser
        {
            get { return GetString("Account_NoMatchingUser"); }
        }

        /// <summary>
        /// User {0} could not be found.
        /// </summary>
        public static string FormatAccount_NoMatchingUser(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Account_NoMatchingUser"), p0);
        }

        /// <summary>
        /// The link used has expired.
        /// </summary>
        public static string Account_ResetExpiredToken
        {
            get { return GetString("Account_ResetExpiredToken"); }
        }

        /// <summary>
        /// The link used has expired.
        /// </summary>
        public static string FormatAccount_ResetExpiredToken()
        {
            return GetString("Account_ResetExpiredToken");
        }

        /// <summary>
        /// &lt;p&gt;Your password reset was unsuccessful: {0}.&lt;/p&gt;
        /// &lt;p&gt;If this is in error, please &lt;a href="{1}"&gt;try again&lt;/a&gt;.&lt;/p&gt;
        /// </summary>
        public static string Account_ResetFailureMessage
        {
            get { return GetString("Account_ResetFailureMessage"); }
        }

        /// <summary>
        /// &lt;p&gt;Your password reset was unsuccessful: {0}.&lt;/p&gt;
        /// &lt;p&gt;If this is in error, please &lt;a href="{1}"&gt;try again&lt;/a&gt;.&lt;/p&gt;
        /// </summary>
        public static string FormatAccount_ResetFailureMessage(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Account_ResetFailureMessage"), p0, p1);
        }

        /// <summary>
        /// The link used is incorrect or has expired.
        /// </summary>
        public static string Account_ResetInvalidToken
        {
            get { return GetString("Account_ResetInvalidToken"); }
        }

        /// <summary>
        /// The link used is incorrect or has expired.
        /// </summary>
        public static string FormatAccount_ResetInvalidToken()
        {
            return GetString("Account_ResetInvalidToken");
        }

        /// <summary>
        /// Reset password
        /// </summary>
        public static string Account_ResetPassword
        {
            get { return GetString("Account_ResetPassword"); }
        }

        /// <summary>
        /// Reset password
        /// </summary>
        public static string FormatAccount_ResetPassword()
        {
            return GetString("Account_ResetPassword");
        }

        /// <summary>
        /// &lt;a href="{0}"&gt;Reset your password&lt;/a&gt; if you've forgotten or lost your login information.
        /// </summary>
        public static string Account_ResetPasswordMessage
        {
            get { return GetString("Account_ResetPasswordMessage"); }
        }

        /// <summary>
        /// &lt;a href="{0}"&gt;Reset your password&lt;/a&gt; if you've forgotten or lost your login information.
        /// </summary>
        public static string FormatAccount_ResetPasswordMessage(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Account_ResetPasswordMessage"), p0);
        }

        /// <summary>
        /// &lt;p&gt;A password reset email has been sent to the email address registered for user &lt;strong&gt;{0}&lt;/strong&gt;.&lt;/p&gt;
        /// &lt;p&gt;If you don't see this email in your inbox within 15 minutes, look for it in your junk-mail folder.&lt;/p&gt;
        /// </summary>
        public static string Account_ResetPasswordSuccessMessage
        {
            get { return GetString("Account_ResetPasswordSuccessMessage"); }
        }

        /// <summary>
        /// &lt;p&gt;A password reset email has been sent to the email address registered for user &lt;strong&gt;{0}&lt;/strong&gt;.&lt;/p&gt;
        /// &lt;p&gt;If you don't see this email in your inbox within 15 minutes, look for it in your junk-mail folder.&lt;/p&gt;
        /// </summary>
        public static string FormatAccount_ResetPasswordSuccessMessage(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Account_ResetPasswordSuccessMessage"), p0);
        }

        /// <summary>
        /// Request reset
        /// </summary>
        public static string Account_ResetRequest
        {
            get { return GetString("Account_ResetRequest"); }
        }

        /// <summary>
        /// Request reset
        /// </summary>
        public static string FormatAccount_ResetRequest()
        {
            return GetString("Account_ResetRequest");
        }

        /// <summary>
        /// &lt;p&gt;Your password has been reset successfully. &lt;/p&gt;
        /// &lt;p&gt;You should be able to &lt;a href="{0}"&gt;sign in&lt;/a&gt; with your new password.&lt;/p&gt;
        /// </summary>
        public static string Account_ResetSuccessMessage
        {
            get { return GetString("Account_ResetSuccessMessage"); }
        }

        /// <summary>
        /// &lt;p&gt;Your password has been reset successfully. &lt;/p&gt;
        /// &lt;p&gt;You should be able to &lt;a href="{0}"&gt;sign in&lt;/a&gt; with your new password.&lt;/p&gt;
        /// </summary>
        public static string FormatAccount_ResetSuccessMessage(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Account_ResetSuccessMessage"), p0);
        }

        /// <summary>
        /// Email Sender
        /// </summary>
        public static string Administration_EmailSender
        {
            get { return GetString("Administration_EmailSender"); }
        }

        /// <summary>
        /// Email Sender
        /// </summary>
        public static string FormatAdministration_EmailSender()
        {
            return GetString("Administration_EmailSender");
        }

        /// <summary>
        /// Email Settings
        /// </summary>
        public static string Administration_EmailSettings
        {
            get { return GetString("Administration_EmailSettings"); }
        }

        /// <summary>
        /// Email Settings
        /// </summary>
        public static string FormatAdministration_EmailSettings()
        {
            return GetString("Administration_EmailSettings");
        }

        /// <summary>
        /// Allow User Password Reset
        /// </summary>
        public static string Administration_ResetPasswordAllowed
        {
            get { return GetString("Administration_ResetPasswordAllowed"); }
        }

        /// <summary>
        /// Allow User Password Reset
        /// </summary>
        public static string FormatAdministration_ResetPasswordAllowed()
        {
            return GetString("Administration_ResetPasswordAllowed");
        }

        /// <summary>
        /// Reset Password Valid Through (Hours)
        /// </summary>
        public static string Administration_ResetPasswordValidDurationHours
        {
            get { return GetString("Administration_ResetPasswordValidDurationHours"); }
        }

        /// <summary>
        /// Reset Password Valid Through (Hours)
        /// </summary>
        public static string FormatAdministration_ResetPasswordValidDurationHours()
        {
            return GetString("Administration_ResetPasswordValidDurationHours");
        }

        /// <summary>
        /// Cancel
        /// </summary>
        public static string Client_Cancel
        {
            get { return GetString("Client_Cancel"); }
        }

        /// <summary>
        /// Cancel
        /// </summary>
        public static string FormatClient_Cancel()
        {
            return GetString("Client_Cancel");
        }

        /// <summary>
        /// No preview available for this file type.
        /// </summary>
        public static string Client_UploadNoPreview
        {
            get { return GetString("Client_UploadNoPreview"); }
        }

        /// <summary>
        /// No preview available for this file type.
        /// </summary>
        public static string FormatClient_UploadNoPreview()
        {
            return GetString("Client_UploadNoPreview");
        }

        /// <summary>
        /// Drop files here
        /// </summary>
        public static string Client_UploadDropTarget
        {
            get { return GetString("Client_UploadDropTarget"); }
        }

        /// <summary>
        /// Drop files here
        /// </summary>
        public static string FormatClient_UploadDropTarget()
        {
            return GetString("Client_UploadDropTarget");
        }

        /// <summary>
        /// {0} has gone AFK, with the message "{1}".
        /// </summary>
        public static string Chat_UserIsAfkNote
        {
            get { return GetString("Chat_UserIsAfkNote"); }
        }

        /// <summary>
        /// {0} has gone AFK, with the message "{1}".
        /// </summary>
        public static string FormatChat_UserIsAfkNote(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserIsAfkNote"), p0, p1);
        }

        /// <summary>
        /// You have gone AFK, with the message "{0}".
        /// </summary>
        public static string Chat_YouAreAfkNote
        {
            get { return GetString("Chat_YouAreAfkNote"); }
        }

        /// <summary>
        /// You have gone AFK, with the message "{0}".
        /// </summary>
        public static string FormatChat_YouAreAfkNote(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_YouAreAfkNote"), p0);
        }

        /// <summary>
        /// Max Message Length
        /// </summary>
        public static string Administration_MaxMessageLength
        {
            get { return GetString("Administration_MaxMessageLength"); }
        }

        /// <summary>
        /// Max Message Length
        /// </summary>
        public static string FormatAdministration_MaxMessageLength()
        {
            return GetString("Administration_MaxMessageLength");
        }

        /// <summary>
        /// Max Message Length being set to less than 1 will result in no limit being enforced.
        /// </summary>
        public static string Administration_MaxMessageLengthHelp
        {
            get { return GetString("Administration_MaxMessageLengthHelp"); }
        }

        /// <summary>
        /// Max Message Length being set to less than 1 will result in no limit being enforced.
        /// </summary>
        public static string FormatAdministration_MaxMessageLengthHelp()
        {
            return GetString("Administration_MaxMessageLengthHelp");
        }

        /// <summary>
        /// You cannot post this message. It is too long.
        /// </summary>
        public static string SendMessageTooLong
        {
            get { return GetString("SendMessageTooLong"); }
        }

        /// <summary>
        /// You cannot post this message. It is too long.
        /// </summary>
        public static string FormatSendMessageTooLong()
        {
            return GetString("SendMessageTooLong");
        }

        /// <summary>
        /// &lt;i class="icon-lock icon-4x pull-left"&gt;&lt;/i&gt;
        /// &lt;p&gt;&lt;strong&gt;Are you sure you want to lock this room?&lt;/strong&gt;&lt;/p&gt;
        /// &lt;p&gt;A locked room can only be accessed by its owners and those granted access.&lt;/p&gt;
        /// </summary>
        public static string Lock_ConfirmMessage
        {
            get { return GetString("Lock_ConfirmMessage"); }
        }

        /// <summary>
        /// &lt;i class="icon-lock icon-4x pull-left"&gt;&lt;/i&gt;
        /// &lt;p&gt;&lt;strong&gt;Are you sure you want to lock this room?&lt;/strong&gt;&lt;/p&gt;
        /// &lt;p&gt;A locked room can only be accessed by its owners and those granted access.&lt;/p&gt;
        /// </summary>
        public static string FormatLock_ConfirmMessage()
        {
            return GetString("Lock_ConfirmMessage");
        }

        /// <summary>
        /// Confirm
        /// </summary>
        public static string Client_Confirm
        {
            get { return GetString("Client_Confirm"); }
        }

        /// <summary>
        /// Confirm
        /// </summary>
        public static string FormatClient_Confirm()
        {
            return GetString("Client_Confirm");
        }

        /// <summary>
        /// You cannot ban yourself!
        /// </summary>
        public static string Ban_CannotBanSelf
        {
            get { return GetString("Ban_CannotBanSelf"); }
        }

        /// <summary>
        /// You cannot ban yourself!
        /// </summary>
        public static string FormatBan_CannotBanSelf()
        {
            return GetString("Ban_CannotBanSelf");
        }

        /// <summary>
        /// You cannot unban another admin.
        /// </summary>
        public static string Unban_CannotUnbanAdmin
        {
            get { return GetString("Unban_CannotUnbanAdmin"); }
        }

        /// <summary>
        /// You cannot unban another admin.
        /// </summary>
        public static string FormatUnban_CannotUnbanAdmin()
        {
            return GetString("Unban_CannotUnbanAdmin");
        }

        /// <summary>
        /// Who do you want to unban?
        /// </summary>
        public static string Unban_UserRequired
        {
            get { return GetString("Unban_UserRequired"); }
        }

        /// <summary>
        /// Who do you want to unban?
        /// </summary>
        public static string FormatUnban_UserRequired()
        {
            return GetString("Unban_UserRequired");
        }

        /// <summary>
        /// Checks if a user is banned. Only works if you're an admin.
        /// </summary>
        public static string CheckBanned_CommandInfo
        {
            get { return GetString("CheckBanned_CommandInfo"); }
        }

        /// <summary>
        /// Checks if a user is banned. Only works if you're an admin.
        /// </summary>
        public static string FormatCheckBanned_CommandInfo()
        {
            return GetString("CheckBanned_CommandInfo");
        }

        /// <summary>
        /// No users are owners of {0}.
        /// </summary>
        public static string Chat_RoomOwnersEmpty
        {
            get { return GetString("Chat_RoomOwnersEmpty"); }
        }

        /// <summary>
        /// No users are owners of {0}.
        /// </summary>
        public static string FormatChat_RoomOwnersEmpty(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_RoomOwnersEmpty"), p0);
        }

        /// <summary>
        /// The following users are owners of {0}:
        /// </summary>
        public static string Chat_RoomOwnersResults
        {
            get { return GetString("Chat_RoomOwnersResults"); }
        }

        /// <summary>
        /// The following users are owners of {0}:
        /// </summary>
        public static string FormatChat_RoomOwnersResults(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_RoomOwnersResults"), p0);
        }

        /// <summary>
        /// Show a list of all owners of the specified (or current) room.
        /// </summary>
        public static string Owners_CommandInfo
        {
            get { return GetString("Owners_CommandInfo"); }
        }

        /// <summary>
        /// Show a list of all owners of the specified (or current) room.
        /// </summary>
        public static string FormatOwners_CommandInfo()
        {
            return GetString("Owners_CommandInfo");
        }

        /// <summary>
        /// Which room do you want to list the owners of?
        /// </summary>
        public static string Owners_RoomRequired
        {
            get { return GetString("Owners_RoomRequired"); }
        }

        /// <summary>
        /// Which room do you want to list the owners of?
        /// </summary>
        public static string FormatOwners_RoomRequired()
        {
            return GetString("Owners_RoomRequired");
        }

        /// <summary>
        /// creator
        /// </summary>
        public static string Client_CreatorTag
        {
            get { return GetString("Client_CreatorTag"); }
        }

        /// <summary>
        /// creator
        /// </summary>
        public static string FormatClient_CreatorTag()
        {
            return GetString("Client_CreatorTag");
        }

        /// <summary>
        /// online
        /// </summary>
        public static string Client_OnlineTag
        {
            get { return GetString("Client_OnlineTag"); }
        }

        /// <summary>
        /// online
        /// </summary>
        public static string FormatClient_OnlineTag()
        {
            return GetString("Client_OnlineTag");
        }

        /// <summary>
        /// owner
        /// </summary>
        public static string Client_OwnerTag
        {
            get { return GetString("Client_OwnerTag"); }
        }

        /// <summary>
        /// owner
        /// </summary>
        public static string FormatClient_OwnerTag()
        {
            return GetString("Client_OwnerTag");
        }

        /// <summary>
        /// &lt;strong&gt;Status code: {1} - {0}&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;An error has occurred and the requested resource cannot be provided.  Please check the current URL or &lt;a href="{2}"&gt;Login&lt;/a&gt;.
        /// </summary>
        public static string ErrorContent
        {
            get { return GetString("ErrorContent"); }
        }

        /// <summary>
        /// &lt;strong&gt;Status code: {1} - {0}&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;An error has occurred and the requested resource cannot be provided.  Please check the current URL or &lt;a href="{2}"&gt;Login&lt;/a&gt;.
        /// </summary>
        public static string FormatErrorContent(object p0, object p1, object p2)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("ErrorContent"), p0, p1, p2);
        }

        /// <summary>
        /// &lt;strong&gt;Status code: {1} - {0}&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;&lt;i&gt;Did you mean to access the &lt;a href="{4}"&gt;#{3}&lt;/a&gt; room?&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;An error has occurred and the requested resource cannot be provided.  Please check the current URL or &lt;a href="{2}"&gt;Login&lt;/a&gt;.
        /// </summary>
        public static string ErrorContentSuggestion
        {
            get { return GetString("ErrorContentSuggestion"); }
        }

        /// <summary>
        /// &lt;strong&gt;Status code: {1} - {0}&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;&lt;i&gt;Did you mean to access the &lt;a href="{4}"&gt;#{3}&lt;/a&gt; room?&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;An error has occurred and the requested resource cannot be provided.  Please check the current URL or &lt;a href="{2}"&gt;Login&lt;/a&gt;.
        /// </summary>
        public static string FormatErrorContentSuggestion(object p0, object p1, object p2, object p3, object p4)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("ErrorContentSuggestion"), p0, p1, p2, p3, p4);
        }

        /// <summary>
        /// Kicked
        /// </summary>
        public static string Chat_YouKickedTitle
        {
            get { return GetString("Chat_YouKickedTitle"); }
        }

        /// <summary>
        /// Kicked
        /// </summary>
        public static string FormatChat_YouKickedTitle()
        {
            return GetString("Chat_YouKickedTitle");
        }

        /// <summary>
        /// Close
        /// </summary>
        public static string Client_Close
        {
            get { return GetString("Client_Close"); }
        }

        /// <summary>
        /// Close
        /// </summary>
        public static string FormatClient_Close()
        {
            return GetString("Client_Close");
        }

        /// <summary>
        /// AppInsights ID
        /// </summary>
        public static string Administration_AppInsightsId
        {
            get { return GetString("Administration_AppInsightsId"); }
        }

        /// <summary>
        /// AppInsights ID
        /// </summary>
        public static string FormatAdministration_AppInsightsId()
        {
            return GetString("Administration_AppInsightsId");
        }

        /// <summary>
        /// {0} was banned by {1}.
        /// </summary>
        public static string Chat_UserBanned
        {
            get { return GetString("Chat_UserBanned"); }
        }

        /// <summary>
        /// {0} was banned by {1}.
        /// </summary>
        public static string FormatChat_UserBanned(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserBanned"), p0, p1);
        }

        /// <summary>
        /// {0} was banned by {1} for "{2}".
        /// </summary>
        public static string Chat_UserBannedReason
        {
            get { return GetString("Chat_UserBannedReason"); }
        }

        /// <summary>
        /// {0} was banned by {1} for "{2}".
        /// </summary>
        public static string FormatChat_UserBannedReason(object p0, object p1, object p2)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserBannedReason"), p0, p1, p2);
        }

        /// <summary>
        /// {0} was kicked from {1} by {2}.
        /// </summary>
        public static string Chat_UserKickedFromRoom
        {
            get { return GetString("Chat_UserKickedFromRoom"); }
        }

        /// <summary>
        /// {0} was kicked from {1} by {2}.
        /// </summary>
        public static string FormatChat_UserKickedFromRoom(object p0, object p1, object p2)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserKickedFromRoom"), p0, p1, p2);
        }

        /// <summary>
        /// {0} was kicked from {1} by {2} for "{3}".
        /// </summary>
        public static string Chat_UserKickedFromRoomReason
        {
            get { return GetString("Chat_UserKickedFromRoomReason"); }
        }

        /// <summary>
        /// {0} was kicked from {1} by {2} for "{3}".
        /// </summary>
        public static string FormatChat_UserKickedFromRoomReason(object p0, object p1, object p2, object p3)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_UserKickedFromRoomReason"), p0, p1, p2, p3);
        }

        /// <summary>
        /// You have been banned by {0}.
        /// </summary>
        public static string Chat_YouBanned
        {
            get { return GetString("Chat_YouBanned"); }
        }

        /// <summary>
        /// You have been banned by {0}.
        /// </summary>
        public static string FormatChat_YouBanned(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_YouBanned"), p0);
        }

        /// <summary>
        /// You have been banned by {0} for "{1}".
        /// </summary>
        public static string Chat_YouBannedReason
        {
            get { return GetString("Chat_YouBannedReason"); }
        }

        /// <summary>
        /// You have been banned by {0} for "{1}".
        /// </summary>
        public static string FormatChat_YouBannedReason(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_YouBannedReason"), p0, p1);
        }

        /// <summary>
        /// Banned
        /// </summary>
        public static string Chat_YouBannedTitle
        {
            get { return GetString("Chat_YouBannedTitle"); }
        }

        /// <summary>
        /// Banned
        /// </summary>
        public static string FormatChat_YouBannedTitle()
        {
            return GetString("Chat_YouBannedTitle");
        }

        /// <summary>
        /// You were kicked from {0} by {1} for "{2}".
        /// </summary>
        public static string Chat_YouKickedFromRoomReason
        {
            get { return GetString("Chat_YouKickedFromRoomReason"); }
        }

        /// <summary>
        /// You were kicked from {0} by {1} for "{2}".
        /// </summary>
        public static string FormatChat_YouKickedFromRoomReason(object p0, object p1, object p2)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Chat_YouKickedFromRoomReason"), p0, p1, p2);
        }

        /// <summary>
        /// {0} is not an open room, messages cannot be downloaded.
        /// </summary>
        public static string Client_DownloadMessagesNotOpen
        {
            get { return GetString("Client_DownloadMessagesNotOpen"); }
        }

        /// <summary>
        /// {0} is not an open room, messages cannot be downloaded.
        /// </summary>
        public static string FormatClient_DownloadMessagesNotOpen(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Client_DownloadMessagesNotOpen"), p0);
        }

        /// <summary>
        /// Owned Rooms
        /// </summary>
        public static string Account_OwnedRooms
        {
            get { return GetString("Account_OwnedRooms"); }
        }

        /// <summary>
        /// Owned Rooms
        /// </summary>
        public static string FormatAccount_OwnedRooms()
        {
            return GetString("Account_OwnedRooms");
        }

        private static string GetString(string name, params string[] formatterNames)
        {
            var value = _resourceManager.GetString(name);

            System.Diagnostics.Debug.Assert(value != null);

            if (formatterNames != null)
            {
                for (var i = 0; i < formatterNames.Length; i++)
                {
                    value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
                }
            }

            return value;
        }
    }
}
